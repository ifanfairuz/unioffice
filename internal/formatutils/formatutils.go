//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package formatutils ;import (_a "fmt";_c "github.com/ifanfairuz/unioffice/schema/soo/wml";_f "strconv";_gc "strings";);func _ff (_fb string )(_gg []string ){for _eb :=0;_eb < len (_fb )-2;_eb ++{if string (_fb [_eb ])=="\u0025"{if !_gc .Contains (string (_fb [_eb +2:]),"\u0025"){if _eb ==0{_gg =append (_gg ,_a .Sprintf ("\u0025\u0073\u0025\u0073\u0025\u0073",string (_fb [_eb ]),string (_fb [_eb +1]),string (_fb [_eb +2:])));
}else {_gg =append (_gg ,_a .Sprintf ("\u0025\u0073\u0025\u0073\u0025\u0073\u0025\u0073",string (_fb [_eb -1]),string (_fb [_eb ]),string (_fb [_eb +1]),string (_fb [_eb +2:])));};}else {_gg =append (_gg ,_a .Sprintf ("\u0025\u0073\u0025\u0073\u0025\u0073",string (_fb [_eb ]),string (_fb [_eb +1]),string (_fb [_eb +2])));
};};};return ;};var (_d =[]string {"","\u0049","\u0049\u0049","\u0049\u0049\u0049","\u0049\u0056","\u0056","\u0056\u0049","\u0056\u0049\u0049","\u0056\u0049\u0049\u0049","\u0049\u0058"};_da =[]string {"","\u0058","\u0058\u0058","\u0058\u0058\u0058","\u0058\u004c","\u004c","\u004c\u0058","\u004c\u0058\u0058","\u004c\u0058\u0058\u0058","\u0058\u0043"};
_fe =[]string {"","\u0043","\u0043\u0043","\u0043\u0043\u0043","\u0043\u0044","\u0044","\u0044\u0043","\u0044\u0043\u0043","\u0044\u0043\u0043\u0043","\u0043\u004d","\u004d"};_ed =[]string {"","\u004d","\u004d\u004d","\u004d\u004d\u004d","\u004d\u004d\u004d\u004d","\u004d\u004d\u004dM\u004d","\u004d\u004d\u004d\u004d\u004d\u004d","\u004dM\u004d\u004d\u004d\u004d\u004d","\u004d\u004d\u004d\u004d\u004d\u004d\u004d\u004d","\u004dM\u004d\u004d\u004d\u004d\u004d\u004dM","\u004d\u004d\u004d\u004d\u004d\u004d\u004d\u004d\u004d\u004d"};
_cb =[]string {"\u006f\u006e\u0065","\u0074\u0077\u006f","\u0074\u0068\u0072e\u0065","\u0066\u006f\u0075\u0072","\u0066\u0069\u0076\u0065","\u0073\u0069\u0078","\u0073\u0065\u0076e\u006e","\u0065\u0069\u0067h\u0074","\u006e\u0069\u006e\u0065","\u0074\u0065\u006e","\u0065\u006c\u0065\u0076\u0065\u006e","\u0074\u0077\u0065\u006c\u0076\u0065","\u0074\u0068\u0069\u0072\u0074\u0065\u0065\u006e","\u0066\u006f\u0075\u0072\u0074\u0065\u0065\u006e","\u0066i\u0066\u0074\u0065\u0065\u006e","\u0073i\u0078\u0074\u0065\u0065\u006e","\u0073e\u0076\u0065\u006e\u0074\u0065\u0065n","\u0065\u0069\u0067\u0068\u0074\u0065\u0065\u006e","\u006e\u0069\u006e\u0065\u0074\u0065\u0065\u006e"};
_edf =[]string {"\u0074\u0065\u006e","\u0074\u0077\u0065\u006e\u0074\u0079","\u0074\u0068\u0069\u0072\u0074\u0079","\u0066\u006f\u0072t\u0079","\u0066\u0069\u0066t\u0079","\u0073\u0069\u0078t\u0079","\u0073e\u0076\u0065\u006e\u0074\u0079","\u0065\u0069\u0067\u0068\u0074\u0079","\u006e\u0069\u006e\u0065\u0074\u0079"};
_ce =[]string {"\u0066\u0069\u0072s\u0074","\u0073\u0065\u0063\u006f\u006e\u0064","\u0074\u0068\u0069r\u0064","\u0066\u006f\u0075\u0072\u0074\u0068","\u0066\u0069\u0066t\u0068","\u0073\u0069\u0078t\u0068","\u0073e\u0076\u0065\u006e\u0074\u0068","\u0065\u0069\u0067\u0068\u0074\u0068","\u006e\u0069\u006et\u0068","\u0074\u0065\u006et\u0068","\u0065\u006c\u0065\u0076\u0065\u006e\u0074\u0068","\u0074w\u0065\u006c\u0066\u0074\u0068","\u0074\u0068\u0069\u0072\u0074\u0065\u0065\u006e\u0074\u0068","\u0066\u006f\u0075\u0072\u0074\u0065\u0065\u006e\u0074\u0068","\u0066i\u0066\u0074\u0065\u0065\u006e\u0074h","\u0073i\u0078\u0074\u0065\u0065\u006e\u0074h","s\u0065\u0076\u0065\u006e\u0074\u0065\u0065\u006e\u0074\u0068","\u0065\u0069\u0067\u0068\u0074\u0065\u0065\u006e\u0074\u0068","\u006e\u0069\u006e\u0065\u0074\u0065\u0065\u006e\u0074\u0068"};
_af =[]string {"\u0074\u0065\u006et\u0068","\u0074w\u0065\u006e\u0074\u0069\u0065\u0074h","\u0074h\u0069\u0072\u0074\u0069\u0065\u0074h","\u0066\u006f\u0072\u0074\u0069\u0065\u0074\u0068","\u0066\u0069\u0066\u0074\u0069\u0065\u0074\u0068","\u0073\u0069\u0078\u0074\u0069\u0065\u0074\u0068","\u0073\u0065\u0076\u0065\u006e\u0074\u0069\u0065\u0074\u0068","\u0065i\u0067\u0068\u0074\u0069\u0065\u0074h","\u006ei\u006e\u0065\u0074\u0069\u0065\u0074h"};
_ee ="\u0041\u0042\u0043\u0044\u0045\u0046\u0047\u0048\u0049\u004a\u004bL\u004d\u004e\u004f\u0050\u0051\u0052\u0053\u0054\u0055\u0056W\u0058\u0059\u005a";);func StringToNumbers (str string )(int ,bool ){_be :=0;_egb :=false ;for _ ,_eda :=range []byte (str ){_eda -='0';
if _eda > 9{continue ;};_be =_be *10+int (_eda );_egb =true ;};return _be ,_egb ;};func FormatNumberingText (currentNumber int64 ,ilvl int64 ,lvlText string ,numFmt *_c .CT_NumFmt ,levelNumbers map[int64 ]int64 )string {_b :=_ff (lvlText );_fa :=_ffa (currentNumber ,numFmt );
_cd :=int64 (0);for _ba ,_e :=range _b {_bad :=_a .Sprintf ("\u0025\u0025\u0025\u0064",_ba +1);if len (_b )==1{_bad =_a .Sprintf ("\u0025\u0025\u0025\u0064",ilvl +1);_b [_ba ]=_gc .Replace (_e ,_bad ,_fa ,1);break ;};if ilvl > 0&&ilvl > _cd &&_ba < (len (_b )-1){_fc :=_ffa (levelNumbers [_cd ],numFmt );
_b [_ba ]=_gc .Replace (_e ,_bad ,_fc ,1);_cd ++;}else {_b [_ba ]=_gc .Replace (_e ,_bad ,_fa ,1);};};return _gc .Join (_b ,"");};func _ffa (_cba int64 ,_bf *_c .CT_NumFmt )(_ebc string ){if _bf ==nil {return ;};_ebe :=_bf .ValAttr ;switch _ebe {case _c .ST_NumberFormatNone :_ebc ="";
case _c .ST_NumberFormatDecimal :_ebc =_f .Itoa (int (_cba ));case _c .ST_NumberFormatDecimalZero :_ebc =_f .Itoa (int (_cba ));if _cba < 10{_ebc ="\u0030"+_ebc ;};case _c .ST_NumberFormatUpperRoman :var (_eg =_cba %10;_aa =(_cba %100)/10;_cc =(_cba %1000)/100;
_fbf =_cba /1000;);_ebc =_ed [_fbf ]+_fe [_cc ]+_da [_aa ]+_d [_eg ];case _c .ST_NumberFormatLowerRoman :var (_ea =_cba %10;_gge =(_cba %100)/10;_bac =(_cba %1000)/100;_ccd =_cba /1000;);_ebc =_ed [_ccd ]+_fe [_bac ]+_da [_gge ]+_d [_ea ];_ebc =_gc .ToLower (_ebc );
case _c .ST_NumberFormatUpperLetter :_cf :=_cba %780;if _cf ==0{_cf =780;};_eae :=(_cf -1)/26;_fcc :=(_cf -1)%26;_dd :=_ee [_eae +_fcc ];_ebc =string (_dd );case _c .ST_NumberFormatLowerLetter :_bd :=_cba %780;if _bd ==0{_bd =780;};_cg :=(_bd -1)/26;_faa :=(_bd -1)%26;
_fad :=_ee [_cg +_faa ];_ebc =_gc .ToLower (string (_fad ));default:_ebc ="";};return ;};