//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package license ;import (_ee "bytes";_ag "compress/gzip";_ac "crypto";_bc "crypto/aes";_bg "crypto/cipher";_f "crypto/hmac";_de "crypto/rand";_gf "crypto/rsa";_egd "crypto/sha256";_beg "crypto/sha512";_agg "crypto/x509";_eb "encoding/base64";_ca "encoding/binary";
_ab "encoding/hex";_egb "encoding/json";_gd "encoding/pem";_af "errors";_eg "fmt";_ce "github.com/ifanfairuz/unioffice/common";_egf "github.com/ifanfairuz/unioffice/common/logger";_d "io";_ba "io/ioutil";_ef "log";_g "net";_aee "net/http";_be "os";_e "path/filepath";
_c "regexp";_ae "sort";_gg "strings";_b "sync";_bae "time";);func TrackUse (useKey string ){if _aaad ==nil {return ;};if !_aaad ._cce ||len (_aaad ._ed )==0{return ;};if len (useKey )==0{return ;};_dggf .Lock ();defer _dggf .Unlock ();if _ffab ==nil {_ffab =map[string ]int {};
};_ffab [useKey ]++;};func _afa ()*meteredClient {_cfc :=meteredClient {_ff :"h\u0074\u0074\u0070\u0073\u003a\u002f/\u0063\u006c\u006f\u0075\u0064\u002e\u0075\u006e\u0069d\u006f\u0063\u002ei\u006f/\u0061\u0070\u0069",_egg :&_aee .Client {Timeout :30*_bae .Second }};
if _ceb :=_be .Getenv ("\u0055N\u0049\u0044\u004f\u0043_\u004c\u0049\u0043\u0045\u004eS\u0045_\u0053E\u0052\u0056\u0045\u0052\u005f\u0055\u0052L");_gg .HasPrefix (_ceb ,"\u0068\u0074\u0074\u0070"){_cfc ._ff =_ceb ;};return &_cfc ;};var _adc *_gf .PublicKey ;
func Track (docKey string ,useKey string ,docName string )error {return _cfgc (docKey ,useKey ,docName ,!_aaad ._cgb );};func (_bab *meteredClient )checkinUsage (_dff meteredUsageCheckinForm )(meteredUsageCheckinResp ,error ){_dff .Package ="\u0075n\u0069\u006f\u0066\u0066\u0069\u0063e";
_dff .PackageVersion =_ce .Version ;var _fea meteredUsageCheckinResp ;_dbe :=_bab ._ff +"\u002f\u006d\u0065\u0074er\u0065\u0064\u002f\u0075\u0073\u0061\u0067\u0065\u005f\u0063\u0068\u0065\u0063\u006bi\u006e";_dg ,_gdc :=_egb .Marshal (_dff );if _gdc !=nil {return _fea ,_gdc ;
};_bdf ,_gdc :=_cdgf (_dg );if _gdc !=nil {return _fea ,_gdc ;};_bgcf ,_gdc :=_aee .NewRequest ("\u0050\u004f\u0053\u0054",_dbe ,_bdf );if _gdc !=nil {return _fea ,_gdc ;};_bgcf .Header .Add ("\u0043\u006f\u006et\u0065\u006e\u0074\u002d\u0054\u0079\u0070\u0065","\u0061\u0070p\u006c\u0069\u0063a\u0074\u0069\u006f\u006e\u002f\u006a\u0073\u006f\u006e");
_bgcf .Header .Add ("\u0043\u006fn\u0074\u0065\u006et\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");_bgcf .Header .Add ("\u0041c\u0063e\u0070\u0074\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");
_bgcf .Header .Add ("\u0058-\u0041\u0050\u0049\u002d\u004b\u0045Y",_bab ._aae );_edg ,_gdc :=_bab ._egg .Do (_bgcf );if _gdc !=nil {_egf .Log .Error ("\u0049n\u0076\u0061\u006c\u0069d\u0020\u0068\u0074\u0074\u0070 \u0072e\u0073p\u006f\u006e\u0073\u0065\u003a\u0020\u0025v",_gdc );
return _fea ,_gdc ;};defer _edg .Body .Close ();if _edg .StatusCode !=200{_eaa ,_gfg :=_eff (_edg );if _gfg !=nil {return _fea ,_gfg ;};_gfg =_egb .Unmarshal (_eaa ,&_fea );if _gfg !=nil {return _fea ,_gfg ;};return _fea ,_eg .Errorf ("\u0066\u0061i\u006c\u0065\u0064\u0020t\u006f\u0020c\u0068\u0065\u0063\u006b\u0069\u006e\u002c\u0020s\u0074\u0061\u0074\u0075\u0073\u0020\u0063\u006f\u0064\u0065\u0020\u0069s\u003a\u0020\u0025\u0064",_edg .StatusCode );
};_ffa :=_edg .Header .Get ("\u0058\u002d\u0055\u0043\u002d\u0053\u0069\u0067\u006ea\u0074\u0075\u0072\u0065");_fc :=_feb (_dff .MacAddress ,string (_dg ));if _fc !=_ffa {_egf .Log .Error ("I\u006e\u0076\u0061l\u0069\u0064\u0020\u0072\u0065\u0073\u0070\u006f\u006e\u0073\u0065\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u002c\u0020\u0073\u0065t\u0020\u0074\u0068e\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u0073\u0065\u0072\u0076e\u0072\u0020\u0074\u006f \u0068\u0074\u0074\u0070s\u003a\u002f\u002f\u0063\u006c\u006f\u0075\u0064\u002e\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069o\u002f\u0061\u0070\u0069");
return _fea ,_af .New ("\u0066\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u0063\u0068\u0065\u0063\u006b\u0069\u006e\u002c\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0065\u0072\u0076\u0065\u0072 \u0072\u0065\u0073\u0070\u006f\u006e\u0073\u0065");
};_aba ,_gdc :=_eff (_edg );if _gdc !=nil {return _fea ,_gdc ;};_gdc =_egb .Unmarshal (_aba ,&_fea );if _gdc !=nil {return _fea ,_gdc ;};return _fea ,nil ;};func (_dfg LegacyLicense )Verify (pubKey *_gf .PublicKey )error {_afb :=_dfg ;_afb .Signature ="";
_gga :=_ee .Buffer {};_dee :=_egb .NewEncoder (&_gga );if _aeb :=_dee .Encode (_afb );_aeb !=nil {return _aeb ;};_gcd ,_cga :=_ab .DecodeString (_dfg .Signature );if _cga !=nil {return _cga ;};_bga :=_egd .Sum256 (_gga .Bytes ());_cga =_gf .VerifyPKCS1v15 (pubKey ,_ac .SHA256 ,_bga [:],_gcd );
return _cga ;};func _cfgc (_acbg string ,_cge string ,_cbdd string ,_efb bool )error {if _aaad ==nil {return _af .New ("\u006e\u006f\u0020\u006c\u0069\u0063\u0065\u006e\u0073e\u0020\u006b\u0065\u0079");};if !_aaad ._cce ||len (_aaad ._ed )==0{return nil ;
};if len (_acbg )==0&&!_efb {return _af .New ("\u0064\u006f\u0063\u004b\u0065\u0079\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");};_dggf .Lock ();defer _dggf .Unlock ();if _gae ==nil {_gae =map[string ]struct{}{};};if _ffab ==nil {_ffab =map[string ]int {};
};_bege :=0;if len (_acbg )> 0{_ ,_gda :=_gae [_acbg ];if !_gda {_gae [_acbg ]=struct{}{};_bege ++;};if _aaad ._cda {_cdeg =append (_cdeg ,map[string ]interface{}{"\u0074\u0069\u006d\u0065":_bae .Now ().String (),"\u0066\u0075\u006e\u0063":_cge ,"\u0072\u0065\u0066":_acbg [:8],"\u0066\u0069\u006c\u0065":_cbdd ,"\u0063\u006f\u0073\u0074":_bege });
if _gda &&_bege ==0{_egf .Log .Info ("\u0025\u0073\u0020\u0052\u0065\u0066\u003a\u0020\u0025\u0073\u0020\u007c\u0020\u0025\u0073 \u007c \u004e\u006f\u0020\u0063\u0072\u0065\u0064\u0069\u0074\u0020\u0075\u0073\u0065\u0064",_bae .Now ().String (),_acbg [:8],_cge );
};};};if _bege ==0&&!_efb {return nil ;};_ffab [_cge ]++;_eae :=_bae .Now ();_gaeb ,_def :=_adcd .loadState (_aaad ._ed );if _def !=nil {_egf .Log .Error ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_def );return _def ;};_gaeb .UsageLogs =append (_gaeb .UsageLogs ,_cdeg ...);
if _gaeb .Usage ==nil {_gaeb .Usage =map[string ]int {};};for _geb ,_eaab :=range _ffab {if _geb !=""{_gaeb .Usage [_geb ]+=_eaab ;};};_ffab =nil ;const _cbb =24*_bae .Hour ;const _eec =3*24*_bae .Hour ;if len (_gaeb .Instance )==0||_eae .Sub (_gaeb .LastReported )> _cbb ||(_gaeb .LimitDocs &&_gaeb .RemainingDocs <=_gaeb .Docs +int64 (_bege ))||_efb {_aeeg ,_cggg :=_be .Hostname ();
if _cggg !=nil {return _cggg ;};_ffc :=_gaeb .Docs ;_faf ,_fdd ,_cggg :=_cbg ();if _cggg !=nil {_egf .Log .Debug ("\u0055\u006e\u0061b\u006c\u0065\u0020\u0074o\u0020\u0067\u0065\u0074\u0020\u006c\u006fc\u0061\u006c\u0020\u0061\u0064\u0064\u0072\u0065\u0073\u0073\u003a\u0020\u0025\u0073",_cggg .Error ());
_faf =append (_faf ,"\u0069n\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0020n\u006ft\u0020a\u0076\u0061\u0069\u006c\u0061\u0062\u006ce");_fdd =append (_fdd ,"\u0069n\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0020n\u006ft\u0020a\u0076\u0061\u0069\u006c\u0061\u0062\u006ce");
}else {_ae .Strings (_fdd );_ae .Strings (_faf );_beb ,_fgg :=_fcc ();if _fgg !=nil {return _fgg ;};_ggea :=false ;for _ ,_ace :=range _fdd {if _ace ==_beb .String (){_ggea =true ;};};if !_ggea {_fdd =append (_fdd ,_beb .String ());};};_bdd :=_afa ();_bdd ._aae =_aaad ._ed ;
_ffc +=int64 (_bege );_cacd :=meteredUsageCheckinForm {Instance :_gaeb .Instance ,Next :_gaeb .Next ,UsageNumber :int (_ffc ),NumFailed :_gaeb .NumErrors ,Hostname :_aeeg ,LocalIP :_gg .Join (_fdd ,"\u002c\u0020"),MacAddress :_gg .Join (_faf ,"\u002c\u0020"),Package :"\u0075n\u0069\u006f\u0066\u0066\u0069\u0063e",PackageVersion :_ce .Version ,Usage :_gaeb .Usage ,IsPersistentCache :_aaad ._cgb ,Timestamp :_eae .Unix ()};
if len (_faf )==0{_cacd .MacAddress ="\u006e\u006f\u006e\u0065";};if _aaad ._cda {_cacd .UsageLogs =_gaeb .UsageLogs ;};_bcb :=int64 (0);_aaa :=_gaeb .NumErrors ;_agad :=_eae ;_aca :=0;_cbf :=_gaeb .LimitDocs ;_ceab ,_cggg :=_bdd .checkinUsage (_cacd );
if _cggg !=nil {if _eae .Sub (_gaeb .LastReported )> _eec {if !_ceab .Success {return _af .New (_ceab .Message );};return _af .New ("\u0074\u006f\u006f\u0020\u006c\u006f\u006e\u0067\u0020\u0073\u0069\u006e\u0063\u0065\u0020\u006c\u0061\u0073\u0074\u0020\u0073\u0075\u0063\u0063e\u0073\u0073\u0066\u0075\u006c \u0063\u0068e\u0063\u006b\u0069\u006e");
};_bcb =_ffc ;_aaa ++;_agad =_gaeb .LastReported ;}else {_cbf =_ceab .LimitDocs ;_aca =_ceab .RemainingDocs ;_aaa =0;};if len (_ceab .Instance )==0{_ceab .Instance =_cacd .Instance ;};if len (_ceab .Next )==0{_ceab .Next =_cacd .Next ;};_cggg =_adcd .updateState (_bdd ._aae ,_ceab .Instance ,_ceab .Next ,int (_bcb ),_cbf ,_aca ,int (_aaa ),_agad ,nil );
if _cggg !=nil {return _cggg ;};if !_ceab .Success {return _eg .Errorf ("\u0065r\u0072\u006f\u0072\u003a\u0020\u0025s",_ceab .Message );};}else {_def =_adcd .updateState (_aaad ._ed ,_gaeb .Instance ,_gaeb .Next ,int (_gaeb .Docs )+_bege ,_gaeb .LimitDocs ,int (_gaeb .RemainingDocs ),int (_gaeb .NumErrors ),_gaeb .LastReported ,_gaeb .Usage ,_gaeb .UsageLogs ...);
if _def !=nil {return _def ;};};if _aaad ._cda &&len (_acbg )> 0{_fed :="";if _cbdd !=""{_fed =_eg .Sprintf ("\u0046i\u006c\u0065\u0020\u0025\u0073\u0020|",_cbdd );};_egf .Log .Info ("%\u0073\u0020\u007c\u0020\u0025\u0073\u0020\u0052\u0065\u0066\u003a\u0020\u0025\u0073\u0020\u007c\u0020\u0025s\u0020\u007c\u0020\u0025\u0064\u0020\u0063\u0072\u0065\u0064it\u0028\u0073\u0029 \u0075s\u0065\u0064",_eae .String (),_fed ,_acbg [:8],_cge ,_bege );
};return nil ;};func SetLicenseKey (content string ,customerName string )error {if _acdd {return nil ;};_bda ,_bdcc :=_afc (content );if _bdcc !=nil {_egf .Log .Error ("\u004c\u0069c\u0065\u006e\u0073\u0065\u0020\u0063\u006f\u0064\u0065\u0020\u0064\u0065\u0063\u006f\u0064\u0065\u0020\u0065\u0072\u0072\u006f\u0072: \u0025\u0076",_bdcc );
return _bdcc ;};if !_gg .EqualFold (_bda .CustomerName ,customerName ){_egf .Log .Error ("L\u0069ce\u006es\u0065 \u0063\u006f\u0064\u0065\u0020i\u0073\u0073\u0075e\u0020\u002d\u0020\u0043\u0075s\u0074\u006f\u006de\u0072\u0020\u006e\u0061\u006d\u0065\u0020\u006d\u0069\u0073\u006da\u0074\u0063\u0068, e\u0078\u0070\u0065\u0063\u0074\u0065d\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u0062\u0075\u0074\u0020\u0067o\u0074 \u0027\u0025\u0073\u0027",_bda .CustomerName ,customerName );
return _eg .Errorf ("\u0063\u0075\u0073\u0074\u006fm\u0065\u0072\u0020\u006e\u0061\u006d\u0065\u0020\u006d\u0069\u0073\u006d\u0061t\u0063\u0068\u002c\u0020\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u0062\u0075\u0074\u0020\u0067\u006f\u0074\u0020\u0027\u0025\u0073'",_bda .CustomerName ,customerName );
};_bdcc =_bda .Validate ();if _bdcc !=nil {_egf .Log .Error ("\u004c\u0069\u0063\u0065\u006e\u0073e\u0020\u0063\u006f\u0064\u0065\u0020\u0076\u0061\u006c\u0069\u0064\u0061\u0074i\u006f\u006e\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_bdcc );
return _bdcc ;};_aaad =&_bda ;return nil ;};func _cbg ()([]string ,[]string ,error ){_cdac ,_eee :=_g .Interfaces ();if _eee !=nil {return nil ,nil ,_eee ;};var _daa []string ;var _dbg []string ;for _ ,_bdea :=range _cdac {if _bdea .Flags &_g .FlagUp ==0||_ee .Equal (_bdea .HardwareAddr ,nil ){continue ;
};_bad ,_ggc :=_bdea .Addrs ();if _ggc !=nil {return nil ,nil ,_ggc ;};_fga :=0;for _ ,_gfgc :=range _bad {var _fede _g .IP ;switch _abg :=_gfgc .(type ){case *_g .IPNet :_fede =_abg .IP ;case *_g .IPAddr :_fede =_abg .IP ;};if _fede .IsLoopback (){continue ;
};if _fede .To4 ()==nil {continue ;};_dbg =append (_dbg ,_fede .String ());_fga ++;};_defc :=_bdea .HardwareAddr .String ();if _defc !=""&&_fga > 0{_daa =append (_daa ,_defc );};};return _daa ,_dbg ,nil ;};type LegacyLicense struct{Name string ;Signature string `json:",omitempty"`;
Expiration _bae .Time ;LicenseType LegacyLicenseType ;};var _aaad =MakeUnlicensedKey ();func GetLicenseKey ()*LicenseKey {if _aaad ==nil {return nil ;};_gcde :=*_aaad ;return &_gcde ;};func _df (_fg string ,_dc string )([]byte ,error ){var (_acb int ;_gb string ;
);for _ ,_gb =range []string {"\u000a\u002b\u000a","\u000d\u000a\u002b\r\u000a","\u0020\u002b\u0020"}{if _acb =_gg .Index (_dc ,_gb );_acb !=-1{break ;};};if _acb ==-1{return nil ,_eg .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0069\u006e\u0070\u0075\u0074\u002c \u0073i\u0067n\u0061t\u0075\u0072\u0065\u0020\u0073\u0065\u0070\u0061\u0072\u0061\u0074\u006f\u0072");
};_bgc :=_dc [:_acb ];_cc :=_acb +len (_gb );_fa :=_dc [_cc :];if _bgc ==""||_fa ==""{return nil ,_eg .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020\u0069n\u0070\u0075\u0074,\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020or\u0069\u0067\u0069n\u0061\u006c \u006f\u0072\u0020\u0073\u0069\u0067n\u0061\u0074u\u0072\u0065");
};_cfb ,_baa :=_eb .StdEncoding .DecodeString (_bgc );if _baa !=nil {return nil ,_eg .Errorf ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u006f\u0072\u0069\u0067\u0069\u006ea\u006c");};_cef ,_baa :=_eb .StdEncoding .DecodeString (_fa );
if _baa !=nil {return nil ,_eg .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065");};_fda ,_ :=_gd .Decode ([]byte (_fg ));if _fda ==nil {return nil ,_eg .Errorf ("\u0050\u0075\u0062\u004b\u0065\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064");
};_bed ,_baa :=_agg .ParsePKIXPublicKey (_fda .Bytes );if _baa !=nil {return nil ,_baa ;};_deg :=_bed .(*_gf .PublicKey );if _deg ==nil {return nil ,_eg .Errorf ("\u0050u\u0062\u004b\u0065\u0079\u0020\u0063\u006f\u006e\u0076\u0065\u0072s\u0069\u006f\u006e\u0020\u0066\u0061\u0069\u006c\u0065\u0064");
};_cac :=_beg .New ();_cac .Write (_cfb );_ad :=_cac .Sum (nil );_baa =_gf .VerifyPKCS1v15 (_deg ,_ac .SHA512 ,_ad ,_cef );if _baa !=nil {return nil ,_baa ;};return _cfb ,nil ;};func SetMeteredKey (apiKey string )error {if len (apiKey )==0{_egf .Log .Error ("\u004d\u0065\u0074\u0065\u0072e\u0064\u0020\u004c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u0041\u0050\u0049 \u004b\u0065\u0079\u0020\u006d\u0075\u0073\u0074\u0020\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0065\u006d\u0070\u0074\u0079");
_egf .Log .Error ("\u002d\u0020\u0047\u0072\u0061\u0062\u0020\u006f\u006e\u0065\u0020\u0069\u006e\u0020\u0074h\u0065\u0020\u0046\u0072\u0065\u0065\u0020\u0054\u0069\u0065\u0072\u0020\u0061t\u0020\u0068\u0074\u0074\u0070\u0073\u003a\u002f\u002f\u0063\u006c\u006fud\u002e\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f");
return _eg .Errorf ("\u006de\u0074\u0065\u0072e\u0064\u0020\u006ci\u0063en\u0073\u0065\u0020\u0061\u0070\u0069\u0020k\u0065\u0079\u0020\u006d\u0075\u0073\u0074\u0020\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0065\u006d\u0070\u0074\u0079\u003a\u0020\u0063\u0072\u0065\u0061\u0074\u0065 o\u006ee\u0020\u0061\u0074\u0020\u0068\u0074t\u0070\u0073\u003a\u002f\u002fc\u006c\u006f\u0075\u0064\u002e\u0075\u006e\u0069\u0064\u006f\u0063.\u0069\u006f");
};if _aaad !=nil &&(_aaad ._cce ||_aaad .Tier !=LicenseTierUnlicensed ){_egf .Log .Error ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0043\u0061\u006e\u006eo\u0074 \u0073\u0065\u0074\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u006b\u0065\u0079\u0020\u0074\u0077\u0069c\u0065\u0020\u002d\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u006a\u0075\u0073\u0074\u0020\u0069\u006e\u0069\u0074\u0069\u0061\u006c\u0069z\u0065\u0020\u006f\u006e\u0063\u0065");
return _af .New ("\u006c\u0069\u0063en\u0073\u0065\u0020\u006b\u0065\u0079\u0020\u0061\u006c\u0072\u0065\u0061\u0064\u0079\u0020\u0073\u0065\u0074");};_fba :=_afa ();_fba ._aae =apiKey ;_eefb ,_dcc :=_fba .getStatus ();if _dcc !=nil {return _dcc ;};if !_eefb .Valid {return _af .New ("\u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0076\u0061\u006c\u0069\u0064");
};_bde :=&LicenseKey {_cce :true ,_ed :apiKey ,_cgb :true };_aaad =_bde ;return nil ;};var _gae map[string ]struct{};type meteredStatusResp struct{Valid bool `json:"valid"`;OrgCredits int64 `json:"org_credits"`;OrgUsed int64 `json:"org_used"`;OrgRemaining int64 `json:"org_remaining"`;
};type reportState struct{Instance string `json:"inst"`;Next string `json:"n"`;Docs int64 `json:"d"`;NumErrors int64 `json:"e"`;LimitDocs bool `json:"ld"`;RemainingDocs int64 `json:"rd"`;LastReported _bae .Time `json:"lr"`;LastWritten _bae .Time `json:"lw"`;
Usage map[string ]int `json:"u"`;UsageLogs []interface{}`json:"ul,omitempty"`;};type meteredUsageCheckinResp struct{Instance string `json:"inst"`;Next string `json:"next"`;Success bool `json:"success"`;Message string `json:"message"`;RemainingDocs int `json:"rd"`;
LimitDocs bool `json:"ld"`;};var _bfb =_bae .Date (2020,1,1,0,0,0,0,_bae .UTC );var _adcd stateLoader =defaultStateHolder {};func init (){_bdc ,_gaf :=_ab .DecodeString (_ggb );if _gaf !=nil {_ef .Fatalf ("e\u0072\u0072\u006f\u0072 r\u0065a\u0064\u0069\u006e\u0067\u0020k\u0065\u0079\u003a\u0020\u0025\u0073",_gaf );
};_bdcb ,_gaf :=_agg .ParsePKIXPublicKey (_bdc );if _gaf !=nil {_ef .Fatalf ("e\u0072\u0072\u006f\u0072 r\u0065a\u0064\u0069\u006e\u0067\u0020k\u0065\u0079\u003a\u0020\u0025\u0073",_gaf );};_adc =_bdcb .(*_gf .PublicKey );};const (LicenseTierUnlicensed ="\u0075\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064";
LicenseTierCommunity ="\u0063o\u006d\u006d\u0075\u006e\u0069\u0074y";LicenseTierIndividual ="\u0069\u006e\u0064\u0069\u0076\u0069\u0064\u0075\u0061\u006c";LicenseTierBusiness ="\u0062\u0075\u0073\u0069\u006e\u0065\u0073\u0073";);func (_bb *LicenseKey )getExpiryDateToCompare ()_bae .Time {if _bb .Trial {return _bae .Now ().UTC ();
};return _ce .ReleasedAt ;};type MeteredStatus struct{OK bool ;Credits int64 ;Used int64 ;};func SetMeteredKeyUsageLogVerboseMode (val bool ){_aaad ._cda =val };func (_fce defaultStateHolder )loadState (_cee string )(reportState ,error ){_dd ,_cea :=_ffg ();
if _cea !=nil {return reportState {},_cea ;};_cea =_be .MkdirAll (_dd ,0777);if _cea !=nil {return reportState {},_cea ;};if len (_cee )< 20{return reportState {},_af .New ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006b\u0065\u0079");};_gfb :=[]byte (_cee );
_dce :=_beg .Sum512_256 (_gfb [:20]);_cab :=_ab .EncodeToString (_dce [:]);_bfd :=_e .Join (_dd ,_cab );_gdb ,_cea :=_ba .ReadFile (_bfd );if _cea !=nil {if _be .IsNotExist (_cea ){return reportState {},nil ;};_egf .Log .Error ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cea );
return reportState {},_af .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0061");};const _deca ="\u0068\u00619\u004e\u004b\u0038]\u0052\u0062\u004c\u002a\u006d\u0034\u004c\u004b\u0057";_gdb ,_cea =_bef ([]byte (_deca ),_gdb );if _cea !=nil {return reportState {},_cea ;
};var _ceba reportState ;_cea =_egb .Unmarshal (_gdb ,&_ceba );if _cea !=nil {_egf .Log .Error ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0076",_cea );return reportState {},_af .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0061");
};return _ceba ,nil ;};func (_gge *LicenseKey )isExpired ()bool {return _gge .getExpiryDateToCompare ().After (_gge .ExpiresAt )};func (_aga *meteredClient )getStatus ()(meteredStatusResp ,error ){var _bcc meteredStatusResp ;_fe :=_aga ._ff +"\u002fm\u0065t\u0065\u0072\u0065\u0064\u002f\u0073\u0074\u0061\u0074\u0075\u0073";
var _eef meteredStatusForm ;_gfa ,_fge :=_egb .Marshal (_eef );if _fge !=nil {return _bcc ,_fge ;};_bgad ,_fge :=_cdgf (_gfa );if _fge !=nil {return _bcc ,_fge ;};_ecc ,_fge :=_aee .NewRequest ("\u0050\u004f\u0053\u0054",_fe ,_bgad );if _fge !=nil {return _bcc ,_fge ;
};_ecc .Header .Add ("\u0043\u006f\u006et\u0065\u006e\u0074\u002d\u0054\u0079\u0070\u0065","\u0061\u0070p\u006c\u0069\u0063a\u0074\u0069\u006f\u006e\u002f\u006a\u0073\u006f\u006e");_ecc .Header .Add ("\u0043\u006fn\u0074\u0065\u006et\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");
_ecc .Header .Add ("\u0041c\u0063e\u0070\u0074\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");_ecc .Header .Add ("\u0058-\u0041\u0050\u0049\u002d\u004b\u0045Y",_aga ._aae );_fab ,_fge :=_aga ._egg .Do (_ecc );if _fge !=nil {return _bcc ,_fge ;
};defer _fab .Body .Close ();if _fab .StatusCode !=200{return _bcc ,_eg .Errorf ("\u0066\u0061i\u006c\u0065\u0064\u0020t\u006f\u0020c\u0068\u0065\u0063\u006b\u0069\u006e\u002c\u0020s\u0074\u0061\u0074\u0075\u0073\u0020\u0063\u006f\u0064\u0065\u0020\u0069s\u003a\u0020\u0025\u0064",_fab .StatusCode );
};_dfe ,_fge :=_eff (_fab );if _fge !=nil {return _bcc ,_fge ;};_fge =_egb .Unmarshal (_dfe ,&_bcc );if _fge !=nil {return _bcc ,_fge ;};return _bcc ,nil ;};type stateLoader interface{loadState (_bfa string )(reportState ,error );updateState (_gdg ,_adeb ,_cbd string ,_gba int ,_ge bool ,_fbc int ,_aeef int ,_begd _bae .Time ,_aec map[string ]int ,_bfc ...interface{})error ;
};func _eff (_bdg *_aee .Response )([]byte ,error ){var _gafb []byte ;_gbd ,_aag :=_cead (_bdg );if _aag !=nil {return _gafb ,_aag ;};return _ba .ReadAll (_gbd );};func _fcc ()(_g .IP ,error ){_dfgc ,_eggf :=_g .Dial ("\u0075\u0064\u0070","\u0038\u002e\u0038\u002e\u0038\u002e\u0038\u003a\u0038\u0030");
if _eggf !=nil {return nil ,_eggf ;};defer _dfgc .Close ();_aaeb :=_dfgc .LocalAddr ().(*_g .UDPAddr );return _aaeb .IP ,nil ;};type meteredClient struct{_ff string ;_aae string ;_egg *_aee .Client ;};func SetLegacyLicenseKey (s string )error {_ccc :=_c .MustCompile ("\u005c\u0073");
s =_ccc .ReplaceAllString (s ,"");var _agc _d .Reader ;_agc =_gg .NewReader (s );_agc =_eb .NewDecoder (_eb .RawURLEncoding ,_agc );_agc ,_dgga :=_ag .NewReader (_agc );if _dgga !=nil {return _dgga ;};_fbd :=_egb .NewDecoder (_agc );_ccba :=&LegacyLicense {};
if _dge :=_fbd .Decode (_ccba );_dge !=nil {return _dge ;};if _ged :=_ccba .Verify (_adc );_ged !=nil {return _af .New ("\u006c\u0069\u0063en\u0073\u0065\u0020\u0076\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006e\u0020\u0065\u0072\u0072\u006f\u0072");
};if _ccba .Expiration .Before (_ce .ReleasedAt ){return _af .New ("\u006ci\u0063e\u006e\u0073\u0065\u0020\u0065\u0078\u0070\u0069\u0072\u0065\u0064");};_dgf :=_bae .Now ().UTC ();_gef :=LicenseKey {};_gef .CreatedAt =_dgf ;_gef .CustomerId ="\u004c\u0065\u0067\u0061\u0063\u0079";
_gef .CustomerName =_ccba .Name ;_gef .Tier =LicenseTierBusiness ;_gef .ExpiresAt =_ccba .Expiration ;_gef .CreatorName ="\u0055\u006e\u0069\u0044\u006f\u0063\u0020\u0073\u0075p\u0070\u006f\u0072\u0074";_gef .CreatorEmail ="\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0040\u0075\u006e\u0069\u0064o\u0063\u002e\u0069\u006f";
_gef .UniOffice =true ;_aaad =&_gef ;return nil ;};const _bfeb ="\u0055N\u0049D\u004f\u0043\u005f\u004c\u0049C\u0045\u004eS\u0045\u005f\u0044\u0049\u0052";func _bd (_db string ,_cb string ,_ga string )(string ,error ){_acd :=_gg .Index (_ga ,_db );if _acd ==-1{return "",_eg .Errorf ("\u0068\u0065a\u0064\u0065\u0072 \u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
};_fde :=_gg .Index (_ga ,_cb );if _fde ==-1{return "",_eg .Errorf ("\u0066\u006fo\u0074\u0065\u0072 \u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_gdd :=_acd +len (_db )+1;return _ga [_gdd :_fde -1],nil ;};func _ffg ()(string ,error ){_fgbg :=_gg .TrimSpace (_be .Getenv (_bfeb ));
if _fgbg ==""{_egf .Log .Debug ("\u0024\u0025\u0073\u0020e\u006e\u0076\u0069\u0072\u006f\u006e\u006d\u0065\u006e\u0074\u0020\u0076\u0061\u0072\u0069\u0061\u0062l\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e\u0020\u0057\u0069\u006c\u006c\u0020\u0075\u0073\u0065\u0020\u0068\u006f\u006d\u0065\u0020\u0064\u0069\u0072\u0065\u0063\u0074\u006f\u0072\u0079\u0020\u0074\u006f\u0020s\u0074\u006f\u0072\u0065\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020in\u0066o\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u002e",_bfeb );
_ceef :=_gebg ();if len (_ceef )==0{return "",_eg .Errorf ("r\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0024\u0025\u0073\u0020\u0065\u006e\u0076\u0069\u0072\u006f\u006e\u006d\u0065\u006e\u0074\u0020\u0076\u0061r\u0069a\u0062\u006c\u0065\u0020o\u0072\u0020h\u006f\u006d\u0065\u0020\u0064\u0069\u0072\u0065\u0063\u0074\u006f\u0072\u0079\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064",_bfeb );
};_fgbg =_e .Join (_ceef ,"\u002eu\u006e\u0069\u0064\u006f\u0063");};_egga :=_be .MkdirAll (_fgbg ,0777);if _egga !=nil {return "",_egga ;};return _fgbg ,nil ;};var _dggf =&_b .Mutex {};func _bef (_ccb ,_bddc []byte )([]byte ,error ){_fcf :=make ([]byte ,_eb .URLEncoding .DecodedLen (len (_bddc )));
_ccf ,_egdg :=_eb .URLEncoding .Decode (_fcf ,_bddc );if _egdg !=nil {return nil ,_egdg ;};_fcf =_fcf [:_ccf ];_cdcc ,_egdg :=_bc .NewCipher (_ccb );if _egdg !=nil {return nil ,_egdg ;};if len (_fcf )< _bc .BlockSize {return nil ,_af .New ("c\u0069p\u0068\u0065\u0072\u0074\u0065\u0078\u0074\u0020t\u006f\u006f\u0020\u0073ho\u0072\u0074");
};_aegg :=_fcf [:_bc .BlockSize ];_fcf =_fcf [_bc .BlockSize :];_ega :=_bg .NewCFBDecrypter (_cdcc ,_aegg );_ega .XORKeyStream (_fcf ,_fcf );return _fcf ,nil ;};func _afc (_faa string )(LicenseKey ,error ){var _bf LicenseKey ;_deb ,_cde :=_bd (_ea ,_fd ,_faa );
if _cde !=nil {return _bf ,_cde ;};_cg ,_cde :=_df (_bac ,_deb );if _cde !=nil {return _bf ,_cde ;};_cde =_egb .Unmarshal (_cg ,&_bf );if _cde !=nil {return _bf ,_cde ;};_bf .CreatedAt =_bae .Unix (_bf .CreatedAtInt ,0);if _bf .ExpiresAtInt > 0{_cfbg :=_bae .Unix (_bf .ExpiresAtInt ,0);
_bf .ExpiresAt =_cfbg ;};return _bf ,nil ;};func SetMeteredKeyPersistentCache (val bool ){_aaad ._cgb =val };var _cdeg []interface{};var _acdd =false ;const _dae ="\u0055\u004e\u0049OF\u0046\u0049\u0043\u0045\u005f\u0043\u0055\u0053\u0054\u004f\u004d\u0045\u0052\u005f\u004e\u0041\u004d\u0045";
func (_da *LicenseKey )IsLicensed ()bool {if _da ==nil {return false ;};return _da .Tier !=LicenseTierUnlicensed ||_da ._cce ;};type defaultStateHolder struct{};func GenRefId (prefix string )(string ,error ){var _dag _ee .Buffer ;_dag .WriteString (prefix );
_bdaf :=make ([]byte ,8+16);_gbf :=_bae .Now ().UTC ().UnixNano ();_ca .BigEndian .PutUint64 (_bdaf ,uint64 (_gbf ));_ ,_gdge :=_de .Read (_bdaf [8:]);if _gdge !=nil {return "",_gdge ;};_dag .WriteString (_ab .EncodeToString (_bdaf ));return _dag .String (),nil ;
};func (_fgb *LicenseKey )ToString ()string {if _fgb ._cce {return "M\u0065t\u0065\u0072\u0065\u0064\u0020\u0073\u0075\u0062s\u0063\u0072\u0069\u0070ti\u006f\u006e";};_aa :=_eg .Sprintf ("\u004ci\u0063e\u006e\u0073\u0065\u0020\u0049\u0064\u003a\u0020\u0025\u0073\u000a",_fgb .LicenseId );
_aa +=_eg .Sprintf ("\u0043\u0075s\u0074\u006f\u006de\u0072\u0020\u0049\u0064\u003a\u0020\u0025\u0073\u000a",_fgb .CustomerId );_aa +=_eg .Sprintf ("\u0043u\u0073t\u006f\u006d\u0065\u0072\u0020N\u0061\u006de\u003a\u0020\u0025\u0073\u000a",_fgb .CustomerName );
_aa +=_eg .Sprintf ("\u0054i\u0065\u0072\u003a\u0020\u0025\u0073\n",_fgb .Tier );_aa +=_eg .Sprintf ("\u0043r\u0065a\u0074\u0065\u0064\u0020\u0041\u0074\u003a\u0020\u0025\u0073\u000a",_ce .UtcTimeFormat (_fgb .CreatedAt ));if _fgb .ExpiresAt .IsZero (){_aa +="\u0045x\u0070i\u0072\u0065\u0073\u0020\u0041t\u003a\u0020N\u0065\u0076\u0065\u0072\u000a";
}else {_aa +=_eg .Sprintf ("\u0045x\u0070i\u0072\u0065\u0073\u0020\u0041\u0074\u003a\u0020\u0025\u0073\u000a",_ce .UtcTimeFormat (_fgb .ExpiresAt ));};_aa +=_eg .Sprintf ("\u0043\u0072\u0065\u0061\u0074\u006f\u0072\u003a\u0020\u0025\u0073\u0020<\u0025\u0073\u003e\u000a",_fgb .CreatorName ,_fgb .CreatorEmail );
return _aa ;};var _ade =_bae .Date (2019,6,6,0,0,0,0,_bae .UTC );func _deeg (_cbfc ,_efc []byte )([]byte ,error ){_ddc ,_gdae :=_bc .NewCipher (_cbfc );if _gdae !=nil {return nil ,_gdae ;};_eab :=make ([]byte ,_bc .BlockSize +len (_efc ));_fccg :=_eab [:_bc .BlockSize ];
if _ ,_feda :=_d .ReadFull (_de .Reader ,_fccg );_feda !=nil {return nil ,_feda ;};_edd :=_bg .NewCFBEncrypter (_ddc ,_fccg );_edd .XORKeyStream (_eab [_bc .BlockSize :],_efc );_cfe :=make ([]byte ,_eb .URLEncoding .EncodedLen (len (_eab )));_eb .URLEncoding .Encode (_cfe ,_eab );
return _cfe ,nil ;};func _cead (_cfcd *_aee .Response )(_d .ReadCloser ,error ){var _gbgb error ;var _cbfe _d .ReadCloser ;switch _gg .ToLower (_cfcd .Header .Get ("\u0043\u006fn\u0074\u0065\u006et\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067")){case "\u0067\u007a\u0069\u0070":_cbfe ,_gbgb =_ag .NewReader (_cfcd .Body );
if _gbgb !=nil {return _cbfe ,_gbgb ;};defer _cbfe .Close ();default:_cbfe =_cfcd .Body ;};return _cbfe ,nil ;};func _cdgf (_afce []byte )(_d .Reader ,error ){_afe :=new (_ee .Buffer );_bccag :=_ag .NewWriter (_afe );_bccag .Write (_afce );_eeg :=_bccag .Close ();
if _eeg !=nil {return nil ,_eeg ;};return _afe ,nil ;};const _bac ="\u000a\u002d\u002d\u002d\u002d\u002d\u0042\u0045\u0047\u0049\u004e \u0050\u0055\u0042\u004c\u0049\u0043\u0020\u004b\u0045Y\u002d\u002d\u002d\u002d\u002d\u000a\u004d\u0049I\u0042\u0049\u006a\u0041NB\u0067\u006b\u0071\u0068\u006b\u0069G\u0039\u0077\u0030\u0042\u0041\u0051\u0045\u0046A\u0041\u004f\u0043\u0041\u0051\u0038\u0041\u004d\u0049\u0049\u0042\u0043\u0067\u004b\u0043\u0041\u0051\u0045A\u006dF\u0055\u0069\u0079\u0064\u0037\u0062\u0035\u0058\u006a\u0070\u006b\u0050\u0035\u0052\u0061\u0070\u0034\u0077\u000a\u0044\u0063\u0031d\u0079\u007a\u0049\u0051\u0034\u004c\u0065\u006b\u0078\u0072\u0076\u0079\u0074\u006e\u0045\u004d\u0070\u004e\u0055\u0062\u006f\u0036i\u0041\u0037\u0034\u0056\u0038\u0072\u0075\u005a\u004f\u0076\u0072\u0053\u0063\u0073\u0066\u0032\u0051\u0065\u004e9\u002f\u0071r\u0055\u0047\u0038\u0071\u0045\u0062\u0055\u0057\u0064\u006f\u0045\u0059\u0071+\u000a\u006f\u0074\u0046\u004e\u0041\u0046N\u0078\u006c\u0047\u0062\u0078\u0062\u0044\u0048\u0063\u0064\u0047\u0056\u0061\u004d\u0030\u004f\u0058\u0064\u0058g\u0044y\u004c5\u0061\u0049\u0045\u0061\u0067\u004c\u0030\u0063\u0035\u0070\u0077\u006a\u0049\u0064\u0050G\u0049\u006e\u0034\u0036\u0066\u0037\u0038\u0065\u004d\u004a\u002b\u004a\u006b\u0064\u0063\u0070\u0044\n\u0044\u004a\u0061\u0071\u0059\u0058d\u0072\u007a5\u004b\u0065\u0073\u0068\u006aS\u0069\u0049\u0061\u0061\u0037\u006d\u0065\u006e\u0042\u0049\u0041\u0058\u0053\u0034\u0055\u0046\u0078N\u0066H\u0068\u004e\u0030\u0048\u0043\u0059\u005a\u0059\u0071\u0051\u0047\u0037\u0062K+\u0073\u0035\u0072R\u0048\u006f\u006e\u0079\u0064\u004eW\u0045\u0047\u000a\u0048\u0038M\u0079\u0076\u00722\u0070\u0079\u0061\u0032K\u0072\u004d\u0075m\u0066\u006d\u0041\u0078\u0055\u0042\u0036\u0066\u0065\u006e\u0043\u002f4\u004f\u0030\u0057\u00728\u0067\u0066\u0050\u004f\u0055\u0038R\u0069\u0074\u006d\u0062\u0044\u0076\u0051\u0050\u0049\u0052\u0058\u004fL\u0034\u0076\u0054B\u0072\u0042\u0064\u0062a\u0041\u000a9\u006e\u0077\u004e\u0050\u002b\u0069\u002f\u002f\u0032\u0030\u004d\u00542\u0062\u0078\u006d\u0065\u0057\u0042\u002b\u0067\u0070\u0063\u0045\u0068G\u0070\u0058\u005a7\u0033\u0033\u0061\u007a\u0051\u0078\u0072\u0043\u0033\u004a\u0034\u0076\u0033C\u005a\u006d\u0045\u004eS\u0074\u0044\u004b\u002f\u004b\u0044\u0053\u0050\u004b\u0055\u0047\u0066\u00756\u000a\u0066\u0077I\u0044\u0041\u0051\u0041\u0042\u000a\u002d\u002d\u002d\u002d\u002dE\u004e\u0044\u0020\u0050\u0055\u0042\u004c\u0049\u0043 \u004b\u0045Y\u002d\u002d\u002d\u002d\u002d\n";
type meteredUsageCheckinForm struct{Instance string `json:"inst"`;Next string `json:"next"`;UsageNumber int `json:"usage_number"`;NumFailed int64 `json:"num_failed"`;Hostname string `json:"hostname"`;LocalIP string `json:"local_ip"`;MacAddress string `json:"mac_address"`;
Package string `json:"package"`;PackageVersion string `json:"package_version"`;Usage map[string ]int `json:"u"`;IsPersistentCache bool `json:"is_persistent_cache"`;Timestamp int64 `json:"timestamp"`;UsageLogs []interface{}`json:"ul,omitempty"`;};const (_ea ="\u002d\u002d\u002d--\u0042\u0045\u0047\u0049\u004e\u0020\u0055\u004e\u0049D\u004fC\u0020L\u0049C\u0045\u004e\u0053\u0045\u0020\u004b\u0045\u0059\u002d\u002d\u002d\u002d\u002d";
_fd ="\u002d\u002d\u002d\u002d\u002d\u0045\u004e\u0044\u0020\u0055\u004e\u0049\u0044\u004f\u0043 \u004cI\u0043\u0045\u004e\u0053\u0045\u0020\u004b\u0045\u0059\u002d\u002d\u002d\u002d\u002d";);func _feb (_aecg ,_cabb string )string {_cfge :=[]byte (_aecg );
_bff :=_f .New (_egd .New ,_cfge );_bff .Write ([]byte (_cabb ));return _eb .StdEncoding .EncodeToString (_bff .Sum (nil ));};var _cfgd =_bae .Date (2010,1,1,0,0,0,0,_bae .UTC );func GetMeteredState ()(MeteredStatus ,error ){if _aaad ==nil {return MeteredStatus {},_af .New ("\u006c\u0069\u0063\u0065ns\u0065\u0020\u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");
};if !_aaad ._cce ||len (_aaad ._ed )==0{return MeteredStatus {},_af .New ("\u0061p\u0069 \u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");};_abe ,_cgg :=_adcd .loadState (_aaad ._ed );if _cgg !=nil {_egf .Log .Error ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cgg );
return MeteredStatus {},_cgg ;};if _abe .Docs > 0{_fbaf :=_cfgc ("","","",true );if _fbaf !=nil {return MeteredStatus {},_fbaf ;};};_dggf .Lock ();defer _dggf .Unlock ();_ffe :=_afa ();_ffe ._aae =_aaad ._ed ;_cdg ,_cgg :=_ffe .getStatus ();if _cgg !=nil {return MeteredStatus {},_cgg ;
};if !_cdg .Valid {return MeteredStatus {},_af .New ("\u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0076\u0061\u006c\u0069\u0064");};_bgaf :=MeteredStatus {OK :true ,Credits :_cdg .OrgCredits ,Used :_cdg .OrgUsed };return _bgaf ,nil ;};func MakeUnlicensedKey ()*LicenseKey {_egc :=LicenseKey {};
_egc .CustomerName ="\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064";_egc .Tier =LicenseTierIndividual ;_egc .CreatedAt =_bae .Now ().UTC ();_egc .CreatedAtInt =_egc .CreatedAt .Unix ();return &_egc ;};func init (){_efgf :=_be .Getenv (_aeba );
_egda :=_be .Getenv (_dae );if len (_efgf )==0||len (_egda )==0{return ;};_dfd ,_dbb :=_ba .ReadFile (_efgf );if _dbb !=nil {_egf .Log .Error ("\u0055\u006eab\u006c\u0065\u0020t\u006f\u0020\u0072\u0065ad \u006cic\u0065\u006e\u0073\u0065\u0020\u0063\u006fde\u0020\u0066\u0069\u006c\u0065\u003a\u0020%\u0076",_dbb );
return ;};_dbb =SetLicenseKey (string (_dfd ),_egda );if _dbb !=nil {_egf .Log .Error ("\u0055\u006e\u0061b\u006c\u0065\u0020\u0074o\u0020\u006c\u006f\u0061\u0064\u0020\u006ci\u0063\u0065\u006e\u0073\u0065\u0020\u0063\u006f\u0064\u0065\u003a\u0020\u0025\u0076",_dbb );
return ;};};type LegacyLicenseType byte ;const _ggb ="\u0033\u0030\u0035\u0063\u0033\u0030\u0030\u00640\u0036\u0030\u0039\u0032\u0061\u0038\u00364\u0038\u0038\u0036\u0066\u0037\u0030d\u0030\u0031\u0030\u0031\u0030\u00310\u0035\u0030\u0030\u0030\u0033\u0034\u0062\u0030\u0030\u0033\u0030\u00348\u0030\u0032\u0034\u0031\u0030\u0030\u0062\u0038\u0037\u0065\u0061\u0066\u0062\u0036\u0063\u0030\u0037\u0034\u0039\u0039\u0065\u0062\u00397\u0063\u0063\u0039\u0064\u0033\u0035\u0036\u0035\u0065\u0063\u00663\u0031\u0036\u0038\u0031\u0039\u0036\u0033\u0030\u0031\u0039\u0030\u0037c\u0038\u0034\u0031\u0061\u0064\u0064c6\u0036\u0035\u0030\u0038\u0036\u0062\u0062\u0033\u0065\u0064\u0038\u0065\u0062\u0031\u0032\u0064\u0039\u0064\u0061\u0032\u0036\u0063\u0061\u0066\u0061\u0039\u0036\u00345\u0030\u00314\u0036\u0064\u0061\u0038\u0062\u0064\u0030\u0063c\u0066\u0031\u0035\u0035\u0066\u0063a\u0063\u0063\u00368\u0036\u0039\u0035\u0035\u0065\u0066\u0030\u0033\u0030\u0032\u0066\u0061\u0034\u0034\u0061\u0061\u0033\u0065\u0063\u0038\u0039\u0034\u0031\u0037\u0062\u0030\u0032\u0030\u0033\u0030\u0031\u0030\u0030\u0030\u0031";
func _bec (_ec string ,_aff []byte )(string ,error ){_fb ,_ :=_gd .Decode ([]byte (_ec ));if _fb ==nil {return "",_eg .Errorf ("\u0050\u0072\u0069\u0076\u004b\u0065\u0079\u0020\u0066a\u0069\u006c\u0065\u0064");};_cf ,_cfg :=_agg .ParsePKCS1PrivateKey (_fb .Bytes );
if _cfg !=nil {return "",_cfg ;};_bcg :=_beg .New ();_bcg .Write (_aff );_abb :=_bcg .Sum (nil );_cd ,_cfg :=_gf .SignPKCS1v15 (_de .Reader ,_cf ,_ac .SHA512 ,_abb );if _cfg !=nil {return "",_cfg ;};_efa :=_eb .StdEncoding .EncodeToString (_aff );_efa +="\u000a\u002b\u000a";
_efa +=_eb .StdEncoding .EncodeToString (_cd );return _efa ,nil ;};const _aeba ="\u0055\u004e\u0049\u004fFF\u0049\u0043\u0045\u005f\u004c\u0049\u0043\u0045\u004e\u0053\u0045\u005f\u0050\u0041T\u0048";var _ffab map[string ]int ;func (_bedf *LicenseKey )TypeToString ()string {if _bedf ._cce {return "M\u0065t\u0065\u0072\u0065\u0064\u0020\u0073\u0075\u0062s\u0063\u0072\u0069\u0070ti\u006f\u006e";
};if _bedf .Tier ==LicenseTierUnlicensed {return "\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064";};if _bedf .Tier ==LicenseTierCommunity {return "\u0041\u0047PL\u0076\u0033\u0020O\u0070\u0065\u006e\u0020Sou\u0072ce\u0020\u0043\u006f\u006d\u006d\u0075\u006eit\u0079\u0020\u004c\u0069\u0063\u0065\u006es\u0065";
};if _bedf .Tier ==LicenseTierIndividual ||_bedf .Tier =="\u0069\u006e\u0064i\u0065"{return "\u0043\u006f\u006dm\u0065\u0072\u0063\u0069a\u006c\u0020\u004c\u0069\u0063\u0065\u006es\u0065\u0020\u002d\u0020\u0049\u006e\u0064\u0069\u0076\u0069\u0064\u0075\u0061\u006c";
};return "\u0043\u006fm\u006d\u0065\u0072\u0063\u0069\u0061\u006c\u0020\u004c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u002d\u0020\u0042\u0075\u0073\u0069ne\u0073\u0073";};func _gebg ()string {_fcd :=_be .Getenv ("\u0048\u004f\u004d\u0045");if len (_fcd )==0{_fcd ,_ =_be .UserHomeDir ();
};return _fcd ;};type meteredStatusForm struct{};type LicenseKey struct{LicenseId string `json:"license_id"`;CustomerId string `json:"customer_id"`;CustomerName string `json:"customer_name"`;Tier string `json:"tier"`;CreatedAt _bae .Time `json:"-"`;CreatedAtInt int64 `json:"created_at"`;
ExpiresAt _bae .Time `json:"-"`;ExpiresAtInt int64 `json:"expires_at"`;CreatedBy string `json:"created_by"`;CreatorName string `json:"creator_name"`;CreatorEmail string `json:"creator_email"`;UniPDF bool `json:"unipdf"`;UniOffice bool `json:"unioffice"`;
UniHTML bool `json:"unihtml"`;Trial bool `json:"trial"`;_cce bool ;_ed string ;_cgb bool ;_cda bool ;};func (_eacb defaultStateHolder )updateState (_dgg ,_fbaa ,_bbe string ,_edb int ,_afcf bool ,_abd int ,_fbb int ,_fgc _bae .Time ,_ggg map[string ]int ,_bge ...interface{})error {_bag ,_cdc :=_ffg ();
if _cdc !=nil {return _cdc ;};_cdc =_be .MkdirAll (_bag ,0777);if _cdc !=nil {return _cdc ;};if len (_dgg )< 20{return _af .New ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006b\u0065\u0079");};_dab :=[]byte (_dgg );_cad :=_beg .Sum512_256 (_dab [:20]);
_bfe :=_ab .EncodeToString (_cad [:]);_affa :=_e .Join (_bag ,_bfe );var _beda reportState ;_beda .Docs =int64 (_edb );_beda .NumErrors =int64 (_fbb );_beda .LimitDocs =_afcf ;_beda .RemainingDocs =int64 (_abd );_beda .LastWritten =_bae .Now ().UTC ();
_beda .LastReported =_fgc ;_beda .Instance =_fbaa ;_beda .Next =_bbe ;_beda .Usage =_ggg ;_bcca ,_cdc :=_egb .Marshal (_beda );if _cdc !=nil {return _cdc ;};const _afaf ="\u0068\u00619\u004e\u004b\u0038]\u0052\u0062\u004c\u002a\u006d\u0034\u004c\u004b\u0057";
_bcca ,_cdc =_deeg ([]byte (_afaf ),_bcca );if _cdc !=nil {return _cdc ;};_cdc =_ba .WriteFile (_affa ,_bcca ,0600);if _cdc !=nil {return _cdc ;};return nil ;};func (_ebc *LicenseKey )Validate ()error {if _ebc ._cce {return nil ;};if len (_ebc .LicenseId )< 10{return _eg .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020L\u0069\u0063\u0065n\u0073e\u0020\u0049\u0064");
};if len (_ebc .CustomerId )< 10{return _eg .Errorf ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065:\u0020C\u0075\u0073\u0074\u006f\u006d\u0065\u0072 \u0049\u0064");};if len (_ebc .CustomerName )< 1{return _eg .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069c\u0065\u006e\u0073\u0065\u003a\u0020\u0043u\u0073\u0074\u006f\u006d\u0065\u0072\u0020\u004e\u0061\u006d\u0065");
};if _cfgd .After (_ebc .CreatedAt ){return _eg .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020\u0043\u0072\u0065\u0061\u0074\u0065\u0064 \u0041\u0074\u0020\u0069\u0073 \u0069\u006ev\u0061\u006c\u0069\u0064");
};if _ebc .ExpiresAt .IsZero (){_gc :=_ebc .CreatedAt .AddDate (1,0,0);if _bfb .After (_gc ){_gc =_bfb ;};_ebc .ExpiresAt =_gc ;};if _ebc .CreatedAt .After (_ebc .ExpiresAt ){return _eg .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020\u0043\u0072\u0065\u0061\u0074\u0065\u0064\u0020\u0041\u0074 \u0063a\u006e\u006e\u006f\u0074 \u0062\u0065 \u0047\u0072\u0065\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061\u006e\u0020\u0045\u0078\u0070\u0069\u0072\u0065\u0073\u0020\u0041\u0074");
};if _ebc .isExpired (){_dec :="\u0054\u0068\u0065\u0020\u006c\u0069c\u0065\u006e\u0073\u0065\u0020\u0068\u0061\u0073\u0020\u0061\u006c\u0072\u0065a\u0064\u0079\u0020\u0065\u0078\u0070\u0069r\u0065\u0064\u002e\u000a"+"\u0059o\u0075\u0020\u006d\u0061y\u0020n\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0075\u0070d\u0061\u0074\u0065\u0020\u0074\u0068\u0065\u0020l\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u006b\u0065\u0079\u0020t\u006f\u0020\u0074\u0068\u0065\u0020\u006e\u0065\u0077\u0065s\u0074\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u006b\u0065\u0079\u0020\u0066\u006f\u0072\u0020\u0079o\u0075\u0072\u0020\u006f\u0072\u0067\u0061\u006e\u0069\u007a\u0061\u0074i\u006fn\u002e\u000a"+"\u0054o\u0020\u0066\u0069\u006ed y\u006f\u0075\u0072\u0020n\u0065\u0077\u0065\u0073\u0074\u0020\u006c\u0069\u0063\u0065n\u0073\u0065\u0020\u006b\u0065\u0079\u002c\u0020\u0067\u006f\u0020\u0074\u006f\u0020\u0068\u0074\u0074\u0070\u0073\u003a\u002f\u002f\u0063l\u006f\u0075\u0064\u002e\u0075\u006e\u0069\u0064oc\u002e\u0069\u006f \u0061\u006e\u0064\u0020\u0067o\u0020t\u006f\u0020\u0074\u0068\u0065\u0020\u006c\u0069\u0063e\u006e\u0073\u0065\u0020\u006d\u0065\u006e\u0075\u002e";
return _eg .Errorf ("\u0069\u006e\u0076\u0061li\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020\u0025\u0073",_dec );};if len (_ebc .CreatorName )< 1{return _eg .Errorf ("\u0069\u006ev\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020\u0043\u0072\u0065\u0061\u0074\u006f\u0072\u0020na\u006d\u0065");
};if len (_ebc .CreatorEmail )< 1{return _eg .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069c\u0065\u006e\u0073\u0065\u003a\u0020\u0043r\u0065\u0061\u0074\u006f\u0072\u0020\u0065\u006d\u0061\u0069\u006c");};if _ebc .CreatedAt .After (_ade ){if !_ebc .UniOffice {return _eg .Errorf ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073e\u003a\u0020\u0054\u0068\u0069\u0073\u0020\u0055\u006e\u0069\u0044\u006f\u0063\u0020\u006b\u0065\u0079\u0020i\u0073\u0020\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0066\u006f\u0072\u0020\u0055\u006e\u0069\u004f\u0066\u0066\u0069\u0063\u0065");
};};return nil ;};