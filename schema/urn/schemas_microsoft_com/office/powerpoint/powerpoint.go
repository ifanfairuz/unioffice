//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package powerpoint ;import (_b "encoding/xml";_f "fmt";_bf "github.com/ifanfairuz/unioffice";);func (_fca *Textdata )UnmarshalXML (d *_b .Decoder ,start _b .StartElement )error {_fca .CT_Rel =*NewCT_Rel ();for _ ,_aaf :=range start .Attr {if _aaf .Name .Local =="\u0069\u0064"{_fg ,_ebe :=_aaf .Value ,error (nil );
if _ebe !=nil {return _ebe ;};_fca .IdAttr =&_fg ;continue ;};};for {_ed ,_ce :=d .Token ();if _ce !=nil {return _f .Errorf ("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0054\u0065\u0078t\u0064\u0061\u0074\u0061: \u0025\u0073",_ce );};if _bfg ,_fcba :=_ed .(_b .EndElement );
_fcba &&_bfg .Name ==start .Name {break ;};};return nil ;};type CT_Rel struct{IdAttr *string ;};

// Validate validates the Textdata and its children
func (_ge *Textdata )Validate ()error {return _ge .ValidateWithPath ("\u0054\u0065\u0078\u0074\u0064\u0061\u0074\u0061");};type Iscomment struct{CT_Empty };func (_efd *CT_Rel )MarshalXML (e *_b .Encoder ,start _b .StartElement )error {if _efd .IdAttr !=nil {start .Attr =append (start .Attr ,_b .Attr {Name :_b .Name {Local :"\u0069\u0064"},Value :_f .Sprintf ("\u0025\u0076",*_efd .IdAttr )});
};e .EncodeToken (start );e .EncodeToken (_b .EndElement {Name :start .Name });return nil ;};

// Validate validates the CT_Rel and its children
func (_bd *CT_Rel )Validate ()error {return _bd .ValidateWithPath ("\u0043\u0054\u005f\u0052\u0065\u006c");};type CT_Empty struct{};

// ValidateWithPath validates the CT_Rel and its children, prefixing error messages with path
func (_df *CT_Rel )ValidateWithPath (path string )error {return nil };

// Validate validates the CT_Empty and its children
func (_a *CT_Empty )Validate ()error {return _a .ValidateWithPath ("\u0043\u0054\u005f\u0045\u006d\u0070\u0074\u0079");};

// Validate validates the Iscomment and its children
func (_bb *Iscomment )Validate ()error {return _bb .ValidateWithPath ("\u0049s\u0063\u006f\u006d\u006d\u0065\u006et");};func NewCT_Rel ()*CT_Rel {_ef :=&CT_Rel {};return _ef };func NewCT_Empty ()*CT_Empty {_ba :=&CT_Empty {};return _ba };func (_g *CT_Empty )MarshalXML (e *_b .Encoder ,start _b .StartElement )error {e .EncodeToken (start );
e .EncodeToken (_b .EndElement {Name :start .Name });return nil ;};func (_dg *Iscomment )UnmarshalXML (d *_b .Decoder ,start _b .StartElement )error {_dg .CT_Empty =*NewCT_Empty ();for {_add ,_gg :=d .Token ();if _gg !=nil {return _f .Errorf ("p\u0061\u0072\u0073\u0069ng\u0020I\u0073\u0063\u006f\u006d\u006de\u006e\u0074\u003a\u0020\u0025\u0073",_gg );
};if _dfa ,_da :=_add .(_b .EndElement );_da &&_dfa .Name ==start .Name {break ;};};return nil ;};func (_be *Iscomment )MarshalXML (e *_b .Encoder ,start _b .StartElement )error {start .Attr =append (start .Attr ,_b .Attr {Name :_b .Name {Local :"\u0078\u006d\u006cn\u0073"},Value :"\u0075\u0072\u006e\u003a\u0073\u0063\u0068e\u006d\u0061\u0073-\u006d\u0069\u0063\u0072o\u0073\u006f\u0066\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065\u003a\u0070\u006f\u0077\u0065\u0072\u0070\u006f\u0069\u006e\u0074"});
start .Attr =append (start .Attr ,_b .Attr {Name :_b .Name {Local :"\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"},Value :"\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"});
start .Name .Local ="\u0069s\u0063\u006f\u006d\u006d\u0065\u006et";return _be .CT_Empty .MarshalXML (e ,start );};func (_fcb *Textdata )MarshalXML (e *_b .Encoder ,start _b .StartElement )error {start .Attr =append (start .Attr ,_b .Attr {Name :_b .Name {Local :"\u0078\u006d\u006cn\u0073"},Value :"\u0075\u0072\u006e\u003a\u0073\u0063\u0068e\u006d\u0061\u0073-\u006d\u0069\u0063\u0072o\u0073\u006f\u0066\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065\u003a\u0070\u006f\u0077\u0065\u0072\u0070\u006f\u0069\u006e\u0074"});
start .Attr =append (start .Attr ,_b .Attr {Name :_b .Name {Local :"\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"},Value :"\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"});
start .Name .Local ="\u0074\u0065\u0078\u0074\u0064\u0061\u0074\u0061";return _fcb .CT_Rel .MarshalXML (e ,start );};

// ValidateWithPath validates the Textdata and its children, prefixing error messages with path
func (_ab *Textdata )ValidateWithPath (path string )error {if _aafb :=_ab .CT_Rel .ValidateWithPath (path );_aafb !=nil {return _aafb ;};return nil ;};func NewIscomment ()*Iscomment {_eb :=&Iscomment {};_eb .CT_Empty =*NewCT_Empty ();return _eb };type Textdata struct{CT_Rel };
func NewTextdata ()*Textdata {_beb :=&Textdata {};_beb .CT_Rel =*NewCT_Rel ();return _beb };func (_ag *CT_Rel )UnmarshalXML (d *_b .Decoder ,start _b .StartElement )error {for _ ,_aa :=range start .Attr {if _aa .Name .Local =="\u0069\u0064"{_gc ,_ad :=_aa .Value ,error (nil );
if _ad !=nil {return _ad ;};_ag .IdAttr =&_gc ;continue ;};};for {_dd ,_ga :=d .Token ();if _ga !=nil {return _f .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0043T\u005f\u0052e\u006c\u003a\u0020\u0025\u0073",_ga );};if _cc ,_aac :=_dd .(_b .EndElement );
_aac &&_cc .Name ==start .Name {break ;};};return nil ;};func (_cd *CT_Empty )UnmarshalXML (d *_b .Decoder ,start _b .StartElement )error {for {_d ,_e :=d .Token ();if _e !=nil {return _f .Errorf ("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fE\u006d\u0070\u0074\u0079: \u0025\u0073",_e );
};if _fd ,_fa :=_d .(_b .EndElement );_fa &&_fd .Name ==start .Name {break ;};};return nil ;};

// ValidateWithPath validates the Iscomment and its children, prefixing error messages with path
func (_bc *Iscomment )ValidateWithPath (path string )error {if _dfad :=_bc .CT_Empty .ValidateWithPath (path );_dfad !=nil {return _dfad ;};return nil ;};

// ValidateWithPath validates the CT_Empty and its children, prefixing error messages with path
func (_fc *CT_Empty )ValidateWithPath (path string )error {return nil };func init (){_bf .RegisterConstructor ("\u0075\u0072\u006e\u003a\u0073\u0063\u0068e\u006d\u0061\u0073-\u006d\u0069\u0063\u0072o\u0073\u006f\u0066\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065\u003a\u0070\u006f\u0077\u0065\u0072\u0070\u006f\u0069\u006e\u0074","\u0043\u0054\u005f\u0045\u006d\u0070\u0074\u0079",NewCT_Empty );
_bf .RegisterConstructor ("\u0075\u0072\u006e\u003a\u0073\u0063\u0068e\u006d\u0061\u0073-\u006d\u0069\u0063\u0072o\u0073\u006f\u0066\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065\u003a\u0070\u006f\u0077\u0065\u0072\u0070\u006f\u0069\u006e\u0074","\u0043\u0054\u005f\u0052\u0065\u006c",NewCT_Rel );
_bf .RegisterConstructor ("\u0075\u0072\u006e\u003a\u0073\u0063\u0068e\u006d\u0061\u0073-\u006d\u0069\u0063\u0072o\u0073\u006f\u0066\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065\u003a\u0070\u006f\u0077\u0065\u0072\u0070\u006f\u0069\u006e\u0074","\u0069s\u0063\u006f\u006d\u006d\u0065\u006et",NewIscomment );
_bf .RegisterConstructor ("\u0075\u0072\u006e\u003a\u0073\u0063\u0068e\u006d\u0061\u0073-\u006d\u0069\u0063\u0072o\u0073\u006f\u0066\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065\u003a\u0070\u006f\u0077\u0065\u0072\u0070\u006f\u0069\u006e\u0074","\u0074\u0065\u0078\u0074\u0064\u0061\u0074\u0061",NewTextdata );
};