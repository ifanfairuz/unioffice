//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package convert ;import (_f "github.com/ifanfairuz/unioffice/common/logger";_fa "github.com/ifanfairuz/unioffice/common/tempstorage";_agg "github.com/ifanfairuz/unioffice/internal/convertutils";_fe "github.com/ifanfairuz/unioffice/measurement";_ag "github.com/ifanfairuz/unioffice/schema/soo/dml";
_gg "github.com/ifanfairuz/unioffice/schema/soo/dml/chart";_def "github.com/ifanfairuz/unioffice/schema/soo/ofc/sharedTypes";_dad "github.com/ifanfairuz/unioffice/schema/soo/sml";_ee "github.com/ifanfairuz/unioffice/spreadsheet";_ed "github.com/ifanfairuz/unioffice/spreadsheet/formula";
_de "github.com/ifanfairuz/unioffice/spreadsheet/reference";_ec "github.com/ifanfairuz/unipdf/v3/creator";_da "github.com/ifanfairuz/unipdf/v3/model";_a "image";_d "math";_ga "sort";_g "strconv";);func (_abf *convertContext )fillPages (){for _gbdd ,_dde :=range _abf ._gdd {_bbed :=_abf ._afge [_dde ._gebg :_dde ._gdab ];
for _ece ,_baa :=range _bbed {_deg :=0;_ddd :=0.0;_bedd :=[]*cell {};if _baa ._cafa {for _ ,_ega :=range _baa ._cgfb {_feg :=_abf ._fdgc [_deg ];_abf ._efac =_feg ._eaba [_gbdd ];_abf ._efac ._cegg =true ;_fcde :=_ega ._adg ;if _ddd +_fcde > _feg ._cfgc {_abf .addRowToPage (_bedd ,_ece );
_bedd =[]*cell {_ega };_ddd =_fcde ;_deg ++;}else {_ega ._fec =_ddd ;_bedd =append (_bedd ,_ega );_ddd +=_fcde ;};};if len (_bedd )> 0{_bcgf :=_abf ._fdgc [_deg ];_abf ._efac =_bcgf ._eaba [_gbdd ];_abf ._efac ._cegg =true ;_abf .addRowToPage (_bedd ,_ece );
};};};};};const _gd =15.0;const _ab =0.0;type border struct{_cdeag float64 ;_fagd _ec .Color ;};func (_adfff *convertContext )getBorder (_beba *_dad .CT_BorderPr )*border {_fgeb :=&border {};switch _beba .StyleAttr {case _dad .ST_BorderStyleHair :_fgeb ._cdeag =_dd /2;
case _dad .ST_BorderStyleThin :_fgeb ._cdeag =_dd ;case _dad .ST_BorderStyleMedium :_fgeb ._cdeag =_dd *2;case _dad .ST_BorderStyleThick :_fgeb ._cdeag =_dd *4;};if _fgeb ._cdeag ==0.0{return nil ;};if _ecagc :=_beba .Color ;_ecagc !=nil {_beaf :=_adfff .getColorStringFromSmlColor (_ecagc );
if _beaf !=nil {_fgeb ._fagd =_ec .ColorRGBFromHex (*_beaf );}else {_fgeb ._fagd =_ec .ColorBlack ;};};return _fgeb ;};type convertContext struct{_cegc *_ec .Creator ;_eaab *_ee .Workbook ;_eeeb *_ag .Theme ;_cecg *_ee .Sheet ;_cca *_ee .StyleSheet ;_cagg int ;
_cdea int ;_fdgc []*pagespan ;_efac *page ;_gfab []*colInfo ;_afge []*rowInfo ;_gdd []*rowspan ;_gfdc float64 ;_gcbf float64 ;_gbg float64 ;_agca float64 ;_dead []*mergedCell ;_eed []*anchor ;_eeag float64 ;_aebb int ;_cddc int ;_cgfe int ;_gbbd int ;_degg bool ;
_gaae []_ee .Table ;};func (_gcf *convertContext )determineMaxIndexes (){var _aag ,_ggg int ;_aag =int (_gcf ._cecg .MaxColumnIdx ());_ebc :=_gcf ._cecg .Rows ();if len (_ebc )> 0{_ggg =int (_ebc [len (_ebc )-1].RowNumber ());};for _ ,_aagb :=range _gcf ._eed {if _aagb ._ggb >=_ggg {_ggg =_aagb ._ggb +1;
};if _aagb ._efea >=_aag {_aag =_aagb ._efea +1;};};_gcf ._cagg =_ggg ;_gcf ._cdea =_aag ;};var _c =3.025/_ddccb (1);type rowspan struct{_bda float64 ;_gebg int ;_gdab int ;};func (_afgg *convertContext )makeTextStyleFromCellStyle (_gfb *style )*_ec .TextStyle {_feef :=_afgg ._cegc .NewTextStyle ();
if _gfb ==nil {_feef .FontSize =_agg .DefaultFontSize ;_feef .Font =_agg .AssignStdFontByName (_feef ,_agg .StdFontsMap ["\u0064e\u0066\u0061\u0075\u006c\u0074"][FontStyle_Regular ]);return &_feef ;};if _cbae (_gfb ._bad ){_feef .Underline =true ;_feef .UnderlineStyle =_ec .TextDecorationLineStyle {Offset :0.5,Thickness :_ddccb (1/32)};
};var _ffdd FontStyle ;if _cbae (_gfb ._ddff )&&_cbae (_gfb ._ecea ){_ffdd =FontStyle_BoldItalic ;}else if _cbae (_gfb ._ddff ){_ffdd =FontStyle_Bold ;}else if _cbae (_gfb ._ecea ){_ffdd =FontStyle_Italic ;}else {_ffdd =FontStyle_Regular ;};_bgcd :="\u0064e\u0066\u0061\u0075\u006c\u0074";
if _gfb ._cbc !=nil {_bgcd =*_gfb ._cbc ;};if _dgde ,_bbbe :=_agg .StdFontsMap [_bgcd ];_bbbe {_feef .Font =_agg .AssignStdFontByName (_feef ,_dgde [_ffdd ]);}else if _gcc :=_agg .GetRegisteredFont (_bgcd ,_ffdd );_gcc !=nil {_feef .Font =_gcc ;}else {_f .Log .Debug ("\u0046\u006f\u006e\u0074\u0020\u0025\u0073\u0020\u0077\u0069\u0074h\u0020\u0073\u0074\u0079\u006c\u0065\u0020\u0025s\u0020i\u0073\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002c\u0020\u0072\u0065\u0073\u0065\u0074 \u0074\u006f\u0020\u0064\u0065\u0066\u0061\u0075\u006c\u0074\u002e",_bgcd ,_ffdd );
_feef .Font =_agg .AssignStdFontByName (_feef ,_agg .StdFontsMap ["\u0064e\u0066\u0061\u0075\u006c\u0074"][_ffdd ]);};if _gfb ._fga !=nil {_feef .FontSize =_d .Round (*_gfb ._fga *_afgg ._eeag );};if _gfb ._dcdg !=nil {_feef .Color =_ec .ColorRGBFromHex (*_gfb ._dcdg );
};if _gfb ._bdba !=nil &&*_gfb ._bdba {_feef .FontSize *=_gf ;}else if _gfb ._geab !=nil &&*_gfb ._geab {_feef .FontSize *=_gf ;};return &_feef ;};func _fge (_bbf []*symbol )float64 {_cdc :=0.0;for _ ,_ecf :=range _bbf {_cdc +=_ecf ._gecg ;};return _cdc ;
};func _ddee (_bfd *symbol ){_cecc :=_ec .New ();_cbggf :=_cecc .NewStyledParagraph ();_cbggf .SetMargins (0,0,0,0);_ffce :=_cbggf .Append (_bfd ._bfbg );if _bfd ._dbg !=nil {_ffce .Style =*_bfd ._dbg ;};_bfd ._gbaa =_cbggf .Height ();if _bfd ._gecg ==0{_bfd ._gecg =_cbggf .Width ();
};};const _gc =64.0;type colWidthRange struct{_aecg int ;_fgbd int ;_bdac float64 ;_ede *style ;};func (_ebf *convertContext )makeCols (){_fac :=_ebf ._cecg ;_efd :=_fac .X ();_beac :=[]*colInfo {};_aae :=[]colWidthRange {};if _geb :=_efd .Cols ;len (_geb )> 0{for _ ,_cbeb :=range _geb [0].Col {_bbe :=_gc ;
if _ceb :=_cbeb .WidthAttr ;_ceb !=nil {if *_ceb > 0.83{*_ceb -=0.83;};if *_ceb <=1{_bbe =*_ceb *11;}else {_bbe =5+*_ceb *6;};};_ca :=int (_cbeb .MinAttr -1);_acf :=int (_cbeb .MaxAttr -1);_aae =append (_aae ,colWidthRange {_aecg :_ca ,_fgbd :_acf ,_bdac :_bbe ,_ede :_ebf .getStyle (_cbeb .StyleAttr )});
};};_fcd :=0;for _abb :=0;_abb <=_ebf ._cdea ;_abb ++{if _abb < _ebf ._aebb ||(_abb > _ebf ._cddc &&_ebf ._cddc > 0){continue ;};var _acfb float64 ;var _gcg *style ;if _fcd >=len (_aae ){_acfb =_gc ;}else {_dfe :=_aae [_fcd ];if _abb >=_dfe ._aecg &&_abb <=_dfe ._fgbd {_acfb =_dfe ._bdac ;
_gcg =_dfe ._ede ;if _abb ==_dfe ._fgbd {_fcd ++;};}else {_acfb =_gc ;};};_beac =append (_beac ,&colInfo {_bfaa :_acfb ,_fcda :_gcg });};_gae :=0.0;for _ ,_ff :=range _beac {_gae +=_ff ._bfaa ;};_ebf ._eeag =1.0;if _gae > _ebf ._agca {_ebf ._eeag =_ebf ._agca /_gae ;
for _ ,_aba :=range _beac {_aba ._bfaa *=_ebf ._eeag ;};};_ebf ._gfab =_beac ;};func (_afcg *convertContext )drawPage (_aaad *page ){_decb :=_afcg ._gfdc ;_cdff :=_afcg ._gcbf ;for _ ,_gadd :=range _aaad ._gbab {_acb :=_afcg ._afge [_gadd ._dbab ];for _ ,_efg :=range _gadd ._efefg {var _fafc float64 ;
if _gadd ._dbab > 1{_fafc =_afcg ._afge [_gadd ._dbab -1]._ebgb ;};var _efc ,_facb float64 ;if _dgd :=_efg ._ccdg ;_dgd !=nil {_efc =_dgd ._cdeag ;};if _dcde :=_efg ._adec ;_dcde !=nil {_facb =_dcde ._cdeag ;};_dda :=_decb +_acb ._bafg -0.5*(_fafc -_efc );
_afb :=_decb +_acb ._bafg +_acb ._cgd +0.5*(_acb ._ebgb +_facb );_ecgd :=_cdff +_efg ._fec ;_cbgg :=_ecgd +_efg ._adg ;if _efg ._feda !=nil &&_efg ._feda !=_ec .ColorBlack {_agg .FillRectangle (_afcg ._cegc ,_ecgd ,_dda ,_cbgg -_ecgd ,_afb -_dda ,_efg ._feda );
};};};for _ ,_eea :=range _aaad ._gbab {_bfeg :=_afcg ._afge [_eea ._dbab ];for _ ,_egfe :=range _eea ._efefg {_bee :=_egfe ._cgdg < _egfe ._fec ;_bcgc :=_egfe ._gdea > _egfe ._fec +_egfe ._aab ;var _bcaa ,_abc bool ;for _ ,_bedf :=range _egfe ._gafe {for _ ,_dfa :=range _bedf ._deba {if _bee &&!_bcaa {_bcaa =_dfa ._cgb < 0;
};if _bcgc &&!_abc {_abc =_egfe ._aab < _dfa ._cgb +_dfa ._gecg ;};if _egfe ._fec +_dfa ._cgb >=_egfe ._cgdg &&_egfe ._fec +_dfa ._cgb +_dfa ._gecg <=_egfe ._gdea {_dfc :=_afcg ._cegc .NewStyledParagraph ();_cged :=_cdff +_egfe ._fec +_dfa ._cgb ;_fbeef :=_decb +_bfeg ._bafg +_bedf ._adce -_dfa ._gbaa -_ddccb (0.5);
_dfc .SetPos (_cged ,_fbeef );var _agf *_ec .TextChunk ;if _dfa ._agbf !=""{_agf =_dfc .AddExternalLink (_dfa ._bfbg ,_dfa ._agbf );}else {_agf =_dfc .Append (_dfa ._bfbg );};if _dfa ._dbg !=nil {_agf .Style =*_dfa ._dbg ;};_afcg ._cegc .Draw (_dfc );};
};};var _faa ,_bded ,_beg ,_acbf ,_efa ,_dbdb float64 ;var _ccdc ,_fdgf ,_bgcg ,_gbea _ec .Color ;if _dac :=_egfe ._ccdg ;_dac !=nil {_faa =_dac ._cdeag ;_ccdc =_dac ._fagd ;};if _dggdd :=_egfe ._adec ;_dggdd !=nil {_bded =_dggdd ._cdeag ;_fdgf =_dggdd ._fagd ;
};if _gagg :=_egfe ._bggc ;_gagg !=nil {_beg =_gagg ._cdeag ;_efa =_beg /2;_bgcg =_gagg ._fagd ;};if _ddaa :=_egfe ._gab ;_ddaa !=nil {_acbf =_ddaa ._cdeag ;_dbdb =_acbf /2;_gbea =_ddaa ._fagd ;};var _cae float64 ;if _eea ._dbab > 1{_cae =_afcg ._afge [_eea ._dbab -1]._ebgb ;
};_fca :=_decb +_bfeg ._bafg -0.5*(_cae -_faa );_ffb :=_decb +_bfeg ._bafg +_bfeg ._cgd +0.5*(_bfeg ._ebgb +_bded );_fgg :=_cdff +_egfe ._fec ;_baac :=_fgg +_egfe ._adg ;_agg .DrawLine (_afcg ._cegc ,_fgg ,_fca ,_baac ,_fca ,_faa ,_ccdc );_agg .DrawLine (_afcg ._cegc ,_fgg ,_ffb ,_baac ,_ffb ,_bded ,_fdgf );
if !_bcaa {_agg .DrawLine (_afcg ._cegc ,_fgg -_efa ,_fca ,_fgg -_efa ,_ffb ,_beg ,_bgcg );};if !_abc {_agg .DrawLine (_afcg ._cegc ,_baac -_dbdb ,_fca ,_baac -_dbdb ,_ffb ,_acbf ,_gbea );};};};for _ ,_eec :=range _aaad ._efef {if _eec !=nil {_afcg ._cegc .Draw (_eec );
};};};type mergedCell struct{_cbcc uint32 ;_afbe uint32 ;_bfde uint32 ;_acbe uint32 ;_adgb float64 ;_effd float64 ;};type page struct{_gbab []*pageRow ;_cegg bool ;_efef []*_ec .Image ;_bcac *pagespan ;_fegd *rowspan ;};func (_bg *convertContext )makeCells (){_fcdc :=_bg ._cecg ;
_bcg :=_fcdc .Rows ();_bae :=0;for _dggd ,_ebb :=range _bg ._afge {if _dggd < _bg ._cgfe ||(_dggd > _bg ._gbbd &&_bg ._gbbd > 0){continue ;};_ebb ._cgfb =[]*cell {};_bgc :=0.0;_bed :=_ebb ._cbaa ;if _ebb ._cafa {_gea :=_bcg [_bae ];_bae ++;_fbeg :=_ebb ._cgd ;
for _ ,_af :=range _gea .Cells (){_fbd ,_cbg :=_de .ParseCellReference (_af .Reference ());if _cbg !=nil {_f .Log .Debug ("\u0043\u0061\u006e\u006eo\u0074\u0020\u0070\u0061\u0072\u0073\u0065\u0020\u0061\u0020r\u0065f\u0065\u0072\u0065\u006e\u0063\u0065\u003a \u0025\u0073",_cbg );
continue ;};if int (_fbd .ColumnIdx )< _bg ._aebb ||(int (_fbd .ColumnIdx )> _bg ._cddc &&_bg ._cddc > 0){continue ;};_edc :=_bg ._gfab [_fbd .ColumnIdx ];_aac :=_edc ._bfaa ;_baf :=_aac ;_beb :=_edc ._fcda ;var _dffc ,_bca ,_fgf ,_eca bool ;for _ ,_adf :=range _bg ._dead {if _fbd .RowIdx >=_adf ._cbcc &&_fbd .RowIdx <=_adf ._bfde &&_fbd .ColumnIdx >=_adf ._afbe &&_fbd .ColumnIdx <=_adf ._acbe {if _fbd .ColumnIdx ==_adf ._afbe &&_fbd .RowIdx ==_adf ._cbcc {_aac =_adf ._adgb ;
_fbeg =_adf ._effd ;};_dffc =_fbd .RowIdx !=_adf ._cbcc ;_bca =_fbd .RowIdx !=_adf ._bfde ;_fgf =_fbd .ColumnIdx !=_adf ._afbe ;_eca =_fbd .ColumnIdx !=_adf ._acbe ;};};var _cag *style ;for _ ,_fgc :=range _bg ._gaae {_aaa ,_fbdd ,_fdgg :=_de .ParseRangeReference (_fgc .Reference ());
if _fdgg !=nil ||_aaa .RowIdx > _fbd .RowIdx ||_aaa .ColumnIdx > _fbd .ColumnIdx ||_fbdd .RowIdx < _fbd .RowIdx ||_fbdd .ColumnIdx < _fbd .ColumnIdx ||_bg ._eaab .StyleSheet .X ().TableStyles ==nil {continue ;};_cge :=_fbd .RowIdx ==_aaa .RowIdx ;for _ ,_agb :=range _bg ._eaab .StyleSheet .X ().TableStyles .TableStyle {if _fgc .X ().TableStyleInfo .NameAttr !=nil &&_agb .NameAttr ==*_fgc .X ().TableStyleInfo .NameAttr {for _ ,_agd :=range _agb .TableStyleElement {if !_cge &&_agd .TypeAttr ==_dad .ST_TableStyleTypeWholeTable {_cag =_bg .getDxfStyle (_agd .DxfIdAttr );
};if _cge &&_agd .TypeAttr ==_dad .ST_TableStyleTypeHeaderRow {_cag =_bg .getDxfStyle (_agd .DxfIdAttr );};};};};};_ged :=_bg .getStyleFromCell (_af ,_bed ,_beb ,_cag );var _bge ,_ddb ,_eccb bool ;var _cef ,_bdg ,_decf ,_ecag *border ;var _eaa _dad .ST_VerticalAlignment ;
var _dcd _dad .ST_HorizontalAlignment ;if _ged !=nil {if !_dffc {_cef =_ged ._gecd ;};if !_bca {_bdg =_ged ._adc ;};if !_fgf {_decf =_ged ._bgbg ;};if !_eca {_ecag =_ged ._fafb ;};if _bdg !=nil &&_bdg ._cdeag > _bgc {_bgc =_bdg ._cdeag ;};_eaa =_ged ._ccb ;
_dcd =_ged ._fdb ;if _ged ._bdba !=nil {_bge =*_ged ._bdba ;};if _ged ._geab !=nil {_ddb =*_ged ._geab ;};_eccb =_ged ._fdgcg ;};var _ffd _ec .Color ;if _ged !=nil &&_ged ._bbc !=nil {_ffd =_ec .ColorRGBFromHex (*_ged ._bbc );};_fbdg ,_ffc :=_bg .getContentFromCell (_fcdc ,_af ,_ged ,_aac ,_eccb );
_fabe :=&cell {_dddd :_ffc ,_aab :_aac ,_adg :_baf ,_fbgb :_fbeg ,_gafe :_fbdg ,_ccdg :_cef ,_adec :_bdg ,_bggc :_decf ,_gab :_ecag ,_fada :_bge ,_eccbg :_ddb ,_feda :_ffd };_bg .alignSymbolsHorizontally (_fabe ,_dcd );_bg .alignSymbolsVertically (_fabe ,_eaa );
_ebb ._cgfb =append (_ebb ._cgfb ,_fabe );};};_ebb ._ebgb =_bgc ;};};type pageRow struct{_dbab int ;_efefg []*cell ;};func (_cgc *convertContext )drawSheet (_fcc bool ){for _ccde ,_adfc :=range _cgc ._fdgc {_bdd :=len (_adfc ._eaba );if _ccde ==len (_cgc ._fdgc )-1{for _gfc :=len (_adfc ._eaba )-1;
_gfc >=0;_gfc --{if !_adfc ._eaba [_gfc ]._cegg {_bdd =_gfc ;};};};_fea :=_adfc ._eaba [:_bdd ];for _ ,_bec :=range _fea {_cgc ._cegc .NewPage ();if _fcc {_cgc ._cegc .RotateDeg (270);};_cgc .drawPage (_bec );};};};type symbol struct{_bfbg string ;_cgb float64 ;
_gbaa float64 ;_gecg float64 ;_dbg *_ec .TextStyle ;_agbf string ;};func (_dfbe *convertContext )alignSymbolsHorizontally (_ebdc *cell ,_bfggd _dad .ST_HorizontalAlignment ){if _bfggd ==_dad .ST_HorizontalAlignmentUnset {switch _ebdc ._dddd {case _dad .ST_CellTypeB :_bfggd =_dad .ST_HorizontalAlignmentCenter ;
case _dad .ST_CellTypeN :_bfggd =_dad .ST_HorizontalAlignmentRight ;default:_bfggd =_dad .ST_HorizontalAlignmentLeft ;};};var _aedf float64 ;for _ ,_cfe :=range _ebdc ._gafe {switch _bfggd {case _dad .ST_HorizontalAlignmentLeft :_aedf =_ac ;case _dad .ST_HorizontalAlignmentRight :_gda :=_fge (_cfe ._deba );
_aedf =_ebdc ._aab -_ac -_gda ;case _dad .ST_HorizontalAlignmentCenter :_ace :=_fge (_cfe ._deba );_aedf =(_ebdc ._aab -_ace )/2;};for _ ,_agcg :=range _cfe ._deba {_agcg ._cgb +=_aedf ;};};};type colInfo struct{_dbdg float64 ;_bfaa float64 ;_fcda *style ;
};var _dd =_ddccb (0.0625);func (_edfc *convertContext )makeMergedCells (){_fcg :=[]*mergedCell {};for _ ,_ebcf :=range _edfc ._cecg .MergedCells (){_eac ,_bfac ,_feea :=_de .ParseRangeReference (_ebcf .Reference ());if _feea !=nil {_f .Log .Debug ("\u0065\u0072r\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u006d\u0065\u0072\u0067\u0065\u0064\u0020\u0063\u0065\u006c\u006c: \u0025\u0073",_feea );
continue ;};_cggf :=mergedCell {_cbcc :_eac .RowIdx ,_afbe :_eac .ColumnIdx ,_bfde :_bfac .RowIdx ,_acbe :_bfac .ColumnIdx };for _decc :=_cggf ._afbe -1;_decc < _cggf ._acbe ;_decc ++{_cggf ._adgb +=_edfc ._gfab [_decc ]._bfaa ;};for _fbe :=_cggf ._cbcc -1;
_fbe < _cggf ._bfde ;_fbe ++{_cggf ._effd +=_edfc ._afge [_fbe ]._cgd ;};_fcg =append (_fcg ,&_cggf );};_edfc ._dead =_fcg ;};

// RegisterFont makes a PdfFont accessible for using in converting to PDF.
func RegisterFont (name string ,style FontStyle ,font *_da .PdfFont ){_agg .RegisterFont (name ,style ,font );};func (_cac *convertContext )distributeAnchors (){for _ ,_ebg :=range _cac ._eed {_bbb ,_dba :=_ebg ._dbeg ,_ebg ._ead ;_gfa ,_fed :=_ebg ._bcacg ,_ebg ._dbb ;
_cgf ,_gaa :=_ebg ._ggb ,_ebg ._dfac ;_bdec ,_cdg :=_ebg ._efea ,_ebg ._gbec ;if _bbb < _cac ._cgfe ||(_cgf > _cac ._gbbd &&_cac ._gbbd > 0){continue ;};if _gfa < _cac ._aebb ||(_bdec > _cac ._cddc &&_cac ._cddc > 0){continue ;};var _bfg ,_dag ,_fff ,_eeea *page ;
for _ ,_adff :=range _cac ._fdgc {for _ ,_cfg :=range _adff ._eaba {if _bbb >=_cfg ._fegd ._gebg &&_bbb < _cfg ._fegd ._gdab {if _gfa >=_cfg ._bcac ._fag &&_gfa < _cfg ._bcac ._daa {_cfg ._cegg =true ;_bfg =_cfg ;};if _bdec >=_cfg ._bcac ._fag &&_bdec < _cfg ._bcac ._daa {_cfg ._cegg =true ;
_dag =_cfg ;};};if _cgf >=_cfg ._fegd ._gebg &&_cgf < _cfg ._fegd ._gdab {if _gfa >=_cfg ._bcac ._fag &&_gfa < _cfg ._bcac ._daa {_cfg ._cegg =true ;_eeea =_cfg ;};if _bdec >=_cfg ._bcac ._fag &&_bdec < _cfg ._bcac ._daa {_cfg ._cegg =true ;_fff =_cfg ;
};};};};_cddb :=_bfg !=_dag ;_gde :=_bfg !=_eeea ;if _cddb &&_gde {_afc :=_cac ._gfab [_gfa ]._dbdg +_fe .FromEMU (_fed );_faf :=_bfg ._bcac ._cfgc ;_gdc :=_cac ._gfab [_bdec ]._dbdg +_fe .FromEMU (_cdg );_gcb :=_cac ._afge [_bbb ]._bafg +_fe .FromEMU (_dba );
_cefe :=float64 (_bfg ._fegd ._bda );_cbec :=_cac ._afge [_cgf ]._bafg +_fe .FromEMU (_gaa );_abaa :=_gdc +_faf -_afc ;_eba :=_cbec +_cefe -_gcb ;_bab :=_cac .imageFromAnchor (_ebg ,_abaa ,_eba );_bfg ._efef =append (_bfg ._efef ,_cac .getImage (_bab ,_eba ,_abaa ,_afc ,_gcb ,_faf -_afc ,_cefe -_gcb ,_agg .ImgPart_lt ));
_dag ._efef =append (_dag ._efef ,_cac .getImage (_bab ,_eba ,_abaa ,0,_gcb ,_faf -_afc ,_cefe -_gcb ,_agg .ImgPart_rt ));_eeea ._efef =append (_eeea ._efef ,_cac .getImage (_bab ,_eba ,_abaa ,_afc ,0,_faf -_afc ,_cefe -_gcb ,_agg .ImgPart_lb ));_fff ._efef =append (_fff ._efef ,_cac .getImage (_bab ,_eba ,_abaa ,0,0,_faf -_afc ,_cefe -_gcb ,_agg .ImgPart_rb ));
}else if _cddb {_bcc :=_cac ._afge [_bbb ]._bafg +_fe .FromEMU (_dba );_aef :=_cac ._afge [_cgf ]._bafg +_fe .FromEMU (_gaa );_ccf :=_cac ._gfab [_gfa ]._dbdg +_fe .FromEMU (_fed );_aad :=_bfg ._bcac ._cfgc ;_ffcc :=_cac ._gfab [_bdec ]._dbdg +_fe .FromEMU (_cdg );
_acc :=_ffcc +_aad -_ccf ;_egag :=_aef -_bcc ;_fcgc :=_cac .imageFromAnchor (_ebg ,_acc ,_egag );_bfg ._efef =append (_bfg ._efef ,_cac .getImage (_fcgc ,_egag ,_acc ,_ccf ,_bcc ,_aad -_ccf ,0,_agg .ImgPart_l ));_dag ._efef =append (_dag ._efef ,_cac .getImage (_fcgc ,_egag ,_acc ,0,_bcc ,_aad -_ccf ,0,_agg .ImgPart_r ));
}else if _gde {_ccc :=_cac ._gfab [_gfa ]._dbdg +_fe .FromEMU (_fed );_eab :=_cac ._gfab [_bdec ]._dbdg +_fe .FromEMU (_cdg );_aea :=_cac ._afge [_bbb ]._bafg +_fe .FromEMU (_dba );_dfb :=float64 (_bfg ._fegd ._bda );_cga :=_cac ._afge [_cgf ]._bafg +_fe .FromEMU (_gaa );
_fda :=_eab -_ccc ;_gag :=_cga +_dfb -_aea ;_ecg :=_cac .imageFromAnchor (_ebg ,_fda ,_gag );_bfg ._efef =append (_bfg ._efef ,_cac .getImage (_ecg ,_gag ,_fda ,_ccc ,_aea ,0,_dfb -_aea ,_agg .ImgPart_t ));_eeea ._efef =append (_eeea ._efef ,_cac .getImage (_ecg ,_gag ,_fda ,_ccc ,0,0,_dfb -_aea ,_agg .ImgPart_b ));
}else {_fbg :=_cac ._gfab [_gfa ]._dbdg +_fe .FromEMU (_fed );_deca :=_cac ._gfab [_bdec ]._dbdg +_fe .FromEMU (_cdg );_agcf :=_cac ._afge [_bbb ]._bafg +_fe .FromEMU (_dba );_bfgg :=_cac ._afge [_cgf ]._bafg +_fe .FromEMU (_gaa );_aec :=_deca -_fbg ;_fedd :=_bfgg -_agcf ;
_efe :=_cac .imageFromAnchor (_ebg ,_aec ,_fedd );_bfg ._efef =append (_bfg ._efef ,_cac .getImage (_efe ,_fedd ,_aec ,_fbg ,_agcf ,0,0,_agg .ImgPart_whole ));};};};const _b =2;type line struct{_adce float64 ;_deba []*symbol ;_fegg float64 ;};func (_cce *convertContext )makeAnchors (){_bb ,_eg :=_cce ._cecg .GetDrawing ();
if _bb !=nil {for _ ,_edf :=range _bb .EG_Anchor {_ecc :=&anchor {};if _bea :=_edf .TwoCellAnchor ;_bea !=nil {_acg ,_dgb :=_bea .From ,_bea .To ;if _acg ==nil ||_dgb ==nil {return ;};_ecc ._dbeg =int (_acg .Row );_ecc ._ead =_agg .FromSTCoordinate (_acg .RowOff );
_ecc ._bcacg =int (_acg .Col );_ecc ._dbb =_agg .FromSTCoordinate (_acg .ColOff );_ecc ._ggb =int (_dgb .Row );_ecc ._dfac =_agg .FromSTCoordinate (_dgb .RowOff );_ecc ._efea =int (_dgb .Col );_ecc ._gbec =_agg .FromSTCoordinate (_dgb .ColOff );if _ccd :=_bea .Choice ;
_ccd !=nil {if _bd :=_ccd .Pic ;_bd !=nil {if _feb :=_bd .BlipFill ;_feb !=nil {if _egf :=_feb .Blip ;_egf !=nil {if _ea :=_egf .EmbedAttr ;_ea !=nil {for _ ,_daeg :=range _eg .X ().Relationship {if _daeg .IdAttr ==*_ea {for _ ,_fc :=range _cce ._eaab .Images {if _fc .Target ()==_daeg .TargetAttr {_eee ,_aa :=_fa .Open (_fc .Path ());
if _aa !=nil {_f .Log .Debug ("\u004fp\u0065\u006e\u0020\u0069m\u0061\u0067\u0065\u0020\u0066i\u006ce\u0020e\u0072\u0072\u006f\u0072\u003a\u0020\u0025s",_aa );continue ;};_bfc ,_ ,_aa :=_a .Decode (_eee );if _aa !=nil {_f .Log .Debug ("\u0044\u0065\u0063\u006fde\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020%\u0073",_aa );
continue ;};_ecc ._cgfa =_bfc ;};};};};};};};}else if _eff :=_ccd .GraphicFrame ;_eff !=nil {if _fab :=_eff .Graphic ;_fab !=nil {if _cdf :=_fab .GraphicData ;_cdf !=nil {for _ ,_bc :=range _cdf .Any {if _dbf ,_cdd :=_bc .(*_gg .Chart );_cdd {for _ ,_gce :=range _eg .X ().Relationship {if _gce .IdAttr ==_dbf .IdAttr {_gcd :=_cce ._eaab .GetChartByTargetId (_gce .TargetAttr );
if _gcd !=nil {_ecc ._dggg =_gcd ;};};};};};};};};};};if _ecc ._cgfa !=nil ||_ecc ._dggg !=nil {_cce ._eed =append (_cce ._eed ,_ecc );};};};};func (_bdgf *convertContext )makePages (){for _ ,_dea :=range _bdgf ._fdgc {for _ ,_eaed :=range _bdgf ._gdd {_dea ._eaba =append (_dea ._eaba ,&page {_gbab :[]*pageRow {},_bcac :_dea ,_fegd :_eaed });
};};};func (_dbe *convertContext )makePagespans (){_dbe ._fdgc =[]*pagespan {};_geac :=0.0;_fad :=0;for _fbee ,_bde :=range _dbe ._gfab {_dgbd :=_bde ._bfaa ;if _geac +_dgbd <=_dbe ._agca {_bde ._dbdg =_geac ;_geac +=_dgbd ;}else {_bde ._dbdg =0;_dbe ._fdgc =append (_dbe ._fdgc ,&pagespan {_cfgc :_geac ,_fag :_fad ,_daa :_fbee });
_geac =_dgbd ;_fad =_fbee ;};};_dbe ._fdgc =append (_dbe ._fdgc ,&pagespan {_cfgc :_geac ,_fag :_fad ,_daa :len (_dbe ._gfab )});};func (_fgag *convertContext )getStyle (_gbdb *uint32 )*style {_edeg :=&style {};_eaad :=false ;if _gbdb !=nil {_dbee :=_fgag ._cca .GetCellStyle (*_gbdb );
if _dbee .GetFill ()!=nil &&_dbee .GetFill ().PatternFill !=nil {if _dbee .GetFill ().PatternFill .FgColor !=nil {_edeg ._bbc =_fgag .getColorStringFromSmlColor (_dbee .GetFill ().PatternFill .FgColor );}else if _dbee .GetFill ().PatternFill .BgColor !=nil {_edeg ._bbc =_fgag .getColorStringFromSmlColor (_dbee .GetFill ().PatternFill .BgColor );
};};_baff :=_dbee .GetFont ();for _ ,_deeg :=range _baff .Name {if _deeg !=nil {_edeg ._cbc =&_deeg .ValAttr ;_eaad =true ;break ;};};for _ ,_dgfa :=range _baff .B {if _dgfa !=nil {_aedc :=_dgfa .ValAttr ==nil ||*_dgfa .ValAttr ;_edeg ._ddff =&_aedc ;_eaad =true ;
break ;};};for _ ,_gefc :=range _baff .I {if _gefc !=nil {_bbdg :=_gefc .ValAttr ==nil ||*_gefc .ValAttr ;_edeg ._ecea =&_bbdg ;_eaad =true ;break ;};};for _ ,_becg :=range _baff .U {if _becg !=nil {_beda :=_becg .ValAttr ==_dad .ST_UnderlineValuesSingle ||_becg .ValAttr ==_dad .ST_UnderlineValuesUnset ;
_edeg ._bad =&_beda ;_eaad =true ;break ;};};for _ ,_cacd :=range _baff .Sz {if _cacd !=nil {_eeeab :=_cacd .ValAttr ;_edeg ._fga =&_eeeab ;_eaad =true ;break ;};};for _ ,_bdee :=range _baff .VertAlign {if _bdee !=nil {_bac :=_bdee .ValAttr ==_def .ST_VerticalAlignRunSuperscript ;
_edeg ._bdba =&_bac ;_ecaa :=_bdee .ValAttr ==_def .ST_VerticalAlignRunSubscript ;_edeg ._geab =&_ecaa ;_eaad =true ;break ;};};for _ ,_aeca :=range _baff .Color {if _aeca !=nil {_edeg ._dcdg =_fgag .getColorStringFromSmlColor (_aeca );_eaad =true ;break ;
};};_ebgc :=_dbee .GetBorder ();if _ebgc .Top !=nil {_edeg ._gecd =_fgag .getBorder (_ebgc .Top );_eaad =true ;};if _ebgc .Bottom !=nil {_edeg ._adc =_fgag .getBorder (_ebgc .Bottom );_eaad =true ;};if _ebgc .Left !=nil {_edeg ._bgbg =_fgag .getBorder (_ebgc .Left );
_eaad =true ;};if _ebgc .Right !=nil {_edeg ._fafb =_fgag .getBorder (_ebgc .Right );_eaad =true ;};if _dbee .Wrapped (){_edeg ._fdgcg =true ;_eaad =true ;};if _dgac :=_dbee .GetVerticalAlignment ();_dgac !=_dad .ST_VerticalAlignmentUnset {_edeg ._ccb =_dgac ;
_eaad =true ;};if _bef :=_dbee .GetHorizontalAlignment ();_bef !=_dad .ST_HorizontalAlignmentUnset {_edeg ._fdb =_bef ;_eaad =true ;};};if _eaad {return _edeg ;};return nil ;};func (_gcgd *convertContext )makeRowspans (){var _afg float64 ;_fba :=0;for _cec ,_afe :=range _gcgd ._afge {_ade :=_afe ._cgd +_afe ._ebgb ;
if _afg +_ade <=_gcgd ._gbg {_afe ._bafg =_afg ;_afg +=_ade ;}else {_gcgd ._gdd =append (_gcgd ._gdd ,&rowspan {_bda :_afg ,_gebg :_fba ,_gdab :_cec });_fba =_cec ;_afe ._bafg =0;_afg =_ade ;};};_gcgd ._gdd =append (_gcgd ._gdd ,&rowspan {_bda :_afg ,_gebg :_fba ,_gdab :len (_gcgd ._afge )});
};func (_abgg *convertContext )imageFromAnchor (_aggd *anchor ,_adbb ,_dfeb float64 )_a .Image {if _aggd ._cgfa !=nil {return _aggd ._cgfa ;};if _aggd ._dggg !=nil {_fce ,_gbc :=_agg .MakeImageFromChartSpace (_aggd ._dggg ,_adbb ,_dfeb ,_abgg ._eeeb ,_abgg ._eaab );
if _gbc !=nil {_f .Log .Debug ("C\u0061\u006e\u006e\u006f\u0074\u0020\u006d\u0061\u006b\u0065\u0020\u0061\u006e\u0020\u0069\u006d\u0061\u0067e\u0020\u0066\u0072\u006f\u006d\u0020\u0063\u0068\u0061\u0072tS\u0070\u0061\u0063e\u003a \u0025\u0073",_gbc );return nil ;
};return _fce ;};return nil ;};func (_agcb *convertContext )getStyleFromCell (_agcc _ee .Cell ,_cegge ,_gbgf ,_gef *style )*style {if _gef !=nil {_fece (_gef ,_cegge );_fece (_gef ,_gbgf );return _gef ;};_fgce :=_agcc .X ();_cgga :=_agcb .getStyle (_fgce .SAttr );
_fece (_cgga ,_cegge );_fece (_cgga ,_gbgf );return _cgga ;};func (_cddbc *convertContext )getStyleFromRPrElt (_eeg *_dad .CT_RPrElt )*style {if _eeg ==nil {return nil ;};_egd :=&style {};_egd ._cbc =&_eeg .RFont .ValAttr ;if _ccef :=_eeg .B ;_ccef !=nil {_ceaa :=_ccef .ValAttr ==nil ||*_ccef .ValAttr ;
_egd ._ddff =&_ceaa ;};if _abac :=_eeg .I ;_abac !=nil {_agfb :=_abac .ValAttr ==nil ||*_abac .ValAttr ;_egd ._ecea =&_agfb ;};if _efdb :=_eeg .U ;_efdb !=nil {_abbe :=_efdb .ValAttr ==_dad .ST_UnderlineValuesSingle ||_efdb .ValAttr ==_dad .ST_UnderlineValuesUnset ;
_egd ._bad =&_abbe ;};if _eedd :=_eeg .VertAlign ;_eedd !=nil {_bfgf :=_eedd .ValAttr ==_def .ST_VerticalAlignRunSuperscript ;_egd ._bdba =&_bfgf ;_afcb :=_eedd .ValAttr ==_def .ST_VerticalAlignRunSubscript ;_egd ._geab =&_afcb ;};if _bfec :=_eeg .Sz ;
_bfec !=nil {_bcgcg :=_bfec .ValAttr ;_egd ._fga =&_bcgcg ;};if _eacb :=_eeg .Color ;_eacb !=nil {_egd ._dcdg =_cddbc .getColorStringFromSmlColor (_eacb );};return _egd ;};type anchor struct{_cgfa _a .Image ;_dggg *_gg .ChartSpace ;_dbeg int ;_ead int64 ;
_bcacg int ;_dbb int64 ;_ggb int ;_dfac int64 ;_efea int ;_gbec int64 ;};const _agc =0.25;func _cbae (_dadf *bool )bool {return _dadf !=nil &&*_dadf };func (_gdg *convertContext )getContentFromCell (_ecbf *_ee .Sheet ,_agfg _ee .Cell ,_acd *style ,_gfd float64 ,_caf bool )([]*line ,_dad .ST_CellType ){_gdgg :=_agfg .X ();
var _bbd []*symbol ;switch _gdgg .TAttr {case _dad .ST_CellTypeS :_fgb :=_gdgg .V ;if _fgb !=nil {_ada ,_eeec :=_g .Atoi (*_fgb );if _eeec ==nil {_ffca :=_gdg ._eaab .SharedStrings .X ().Si [_ada ];if _ffca .T !=nil {_bbd =_gdg .getSymbolsFromString (*_ffca .T ,_acd );
}else if _ffca .R !=nil {_bbd =_gdg .getSymbolsFromR (_ffca .R ,_acd );};};};case _dad .ST_CellTypeB :_bgb :=_gdgg .V ;if _bgb !=nil {if *_bgb =="\u0030"{_bbd =_gdg .getSymbolsFromString ("\u0046\u0041\u004cS\u0045",_acd );}else {_bbd =_gdg .getSymbolsFromString ("\u0054\u0052\u0055\u0045",_acd );
};};case _dad .ST_CellTypeStr :if _gdgg .F !=nil {_bfeb :=_ed .NewEvaluator ();_daba :=_ecbf .FormulaContext ().Cell (_agfg .Reference (),_bfeb );_bbd =_gdg .getSymbolsFromString (_daba .Value (),_acd );};default:_bbd =_gdg .getSymbolsFromString (_agfg .GetFormattedValue (),_acd );
};_fgff :=0.0;_ebd :=0.0;var _ecad []*line ;var _aca bool ;if _acd !=nil {if _acd ._bdba !=nil {if *_acd ._bdba {_aca =true ;};};if _acd ._geab !=nil {if *_acd ._geab {_aca =true ;};};};if _caf {_ecad =[]*line {};_cdfad :=_gfd -2*_ac ;_dga :=[]*symbol {};
for _ ,_fggf :=range _bbd {_ddee (_fggf );if _fgff +_fggf ._gecg >=_cdfad {_eabd :=_bbg (_dga );if _aca {_eabd /=_gf ;};_ecad =append (_ecad ,&line {_adce :_ebd ,_deba :_dga ,_fegg :_eabd });_dga =[]*symbol {_fggf };_fgff =_fggf ._gecg ;_ebd +=_eabd ;}else {_fggf ._cgb =_fgff ;
_fgff +=_fggf ._gecg ;_dga =append (_dga ,_fggf );};};_bgce :=_bbg (_dga );if _aca {_bgce /=_gf ;};if len (_dga )> 0{_ecad =append (_ecad ,&line {_adce :_ebd ,_deba :_dga ,_fegg :_bgce });};}else {for _ ,_ceg :=range _bbd {_ddee (_ceg );_ceg ._cgb =_fgff ;
_fgff +=_ceg ._gecg ;};if len (_bbd )> 0{_ecad =[]*line {&line {_deba :_bbd ,_fegg :_bbg (_bbd )}};};};_dfee :=_gdgg .TAttr ;if _dfee ==_dad .ST_CellTypeUnset {_dfee =_dad .ST_CellTypeN ;};return _ecad ,_dfee ;};func _fece (_daca ,_cbf *style ){if _cbf ==nil {return ;
};if _daca ==nil {_daca =_cbf ;return ;};if _daca ._bbc ==nil {_daca ._bbc =_cbf ._bbc ;};if _daca ._cbc ==nil {_daca ._cbc =_cbf ._cbc ;};if _daca ._dcdg ==nil {_daca ._dcdg =_cbf ._dcdg ;};if _daca ._fga ==nil {_daca ._fga =_cbf ._fga ;};if _daca ._ddff ==nil {_daca ._ddff =_cbf ._ddff ;
};if _daca ._ecea ==nil {_daca ._ecea =_cbf ._ecea ;};if _daca ._bad ==nil {_daca ._bad =_cbf ._bad ;};if _daca ._bdba ==nil {_daca ._bdba =_cbf ._bdba ;};if _daca ._geab ==nil {_daca ._geab =_cbf ._geab ;};if _daca ._gecd ==nil {_daca ._gecd =_cbf ._gecd ;
};if _daca ._adc ==nil {_daca ._adc =_cbf ._adc ;};if _daca ._bgbg ==nil {_daca ._bgbg =_cbf ._bgbg ;};if _daca ._fafb ==nil {_daca ._fafb =_cbf ._fafb ;};if _daca ._ccb ==_dad .ST_VerticalAlignmentUnset {_daca ._ccb =_cbf ._ccb ;};if _daca ._fdb ==_dad .ST_HorizontalAlignmentUnset {_daca ._fdb =_cbf ._fdb ;
};};func (_agga *convertContext )getImage (_cfa _a .Image ,_face ,_gec ,_deb ,_effa ,_aff ,_ecgda float64 ,_bege _agg .ImgPart )*_ec .Image {_effa +=_agga ._gfdc ;_deb +=_agga ._gcbf ;_ddfe ,_bdb :=_agg .GetImage (_agga ._cegc ,_cfa ,_face ,_gec ,_deb ,_effa ,_aff ,_ecgda ,_bege );
if _bdb !=nil {_f .Log .Debug ("\u0043\u0061\u006eno\u0074\u0020\u0067\u0065\u0074\u0020\u0061\u006e\u0020\u0069\u006d\u0061\u0067\u0065\u003a\u0020\u0025\u0073",_bdb );return nil ;};return _ddfe ;};func (_egfd *convertContext )getDxfStyle (_cee *uint32 )*style {_gdae :=&style {};
_gcad :=false ;if _cee !=nil {var _fcea *_dad .CT_Dxf ;for _cgbf ,_afgeg :=range _egfd ._cca .X ().Dxfs .Dxf {if uint32 (_cgbf )==*_cee {_fcea =_afgeg ;};};if _fcea ==nil {return nil ;};if _fcea .Fill !=nil &&_fcea .Fill .PatternFill !=nil {if _fcea .Fill .PatternFill .FgColor !=nil {_gdae ._bbc =_egfd .getColorStringFromSmlColor (_fcea .Fill .PatternFill .FgColor );
}else if _fcea .Fill .PatternFill .BgColor !=nil {_gdae ._bbc =_egfd .getColorStringFromSmlColor (_fcea .Fill .PatternFill .BgColor );};};_fage :=_fcea .Font ;for _ ,_bgcf :=range _fage .Name {if _bgcf !=nil {_gdae ._cbc =&_bgcf .ValAttr ;_gcad =true ;
break ;};};for _ ,_aefa :=range _fage .B {if _aefa !=nil {_dbgb :=_aefa .ValAttr ==nil ||*_aefa .ValAttr ;_gdae ._ddff =&_dbgb ;_gcad =true ;break ;};};for _ ,_beeb :=range _fage .I {if _beeb !=nil {_eeeg :=_beeb .ValAttr ==nil ||*_beeb .ValAttr ;_gdae ._ecea =&_eeeg ;
_gcad =true ;break ;};};for _ ,_fggc :=range _fage .U {if _fggc !=nil {_bag :=_fggc .ValAttr ==_dad .ST_UnderlineValuesSingle ||_fggc .ValAttr ==_dad .ST_UnderlineValuesUnset ;_gdae ._bad =&_bag ;_gcad =true ;break ;};};for _ ,_gcaa :=range _fage .Sz {if _gcaa !=nil {_gbeb :=_gcaa .ValAttr ;
_gdae ._fga =&_gbeb ;_gcad =true ;break ;};};for _ ,_gdeb :=range _fage .VertAlign {if _gdeb !=nil {_dfdd :=_gdeb .ValAttr ==_def .ST_VerticalAlignRunSuperscript ;_gdae ._bdba =&_dfdd ;_fafd :=_gdeb .ValAttr ==_def .ST_VerticalAlignRunSubscript ;_gdae ._geab =&_fafd ;
_gcad =true ;break ;};};for _ ,_dgfc :=range _fage .Color {if _dgfc !=nil {_gdae ._dcdg =_egfd .getColorStringFromSmlColor (_dgfc );_gcad =true ;break ;};};_cfae :=_fcea .Border ;if _cfae .Top !=nil {_gdae ._gecd =_egfd .getBorder (_cfae .Top );_gcad =true ;
};if _cfae .Bottom !=nil {_gdae ._adc =_egfd .getBorder (_cfae .Bottom );_gcad =true ;};if _cfae .Left !=nil {_gdae ._bgbg =_egfd .getBorder (_cfae .Left );_gcad =true ;};if _cfae .Right !=nil {_gdae ._fafb =_egfd .getBorder (_cfae .Right );_gcad =true ;
};if _fcea .Alignment !=nil {if _ecbb :=_fcea .Alignment .VerticalAttr ;_ecbb !=_dad .ST_VerticalAlignmentUnset {_gdae ._ccb =_ecbb ;_gcad =true ;};if _cfgg :=_fcea .Alignment .HorizontalAttr ;_cfgg !=_dad .ST_HorizontalAlignmentUnset {_gdae ._fdb =_cfgg ;
_gcad =true ;};};};if _gcad {return _gdae ;};return nil ;};

// FontStyle represents a kind of font styling. It can be FontStyle_Regular, FontStyle_Bold, FontStyle_Italic and FontStyle_BoldItalic.
type FontStyle =_agg .FontStyle ;func (_cab *convertContext )getSymbolsFromString (_cceg string ,_edfa *style )[]*symbol {_geaa :=[]*symbol {};_adea :=_cab .makeTextStyleFromCellStyle (_edfa );for _ ,_dfd :=range _cceg {_geaa =append (_geaa ,&symbol {_bfbg :string (_dfd ),_dbg :_adea });
};return _geaa ;};func _ddccb (_bga float64 )float64 {return _bga *_fe .Millimeter };type style struct{_bbc *string ;_dcdg *string ;_fga *float64 ;_cbc *string ;_ddff *bool ;_ecea *bool ;_bad *bool ;_bdba *bool ;_geab *bool ;_gecd *border ;_adc *border ;
_bgbg *border ;_fafb *border ;_fdgcg bool ;_ccb _dad .ST_VerticalAlignment ;_fdb _dad .ST_HorizontalAlignment ;};type pagespan struct{_cfgc float64 ;_eaba []*page ;_fag int ;_daa int ;};var _egec =map[uint32 ]_ec .PageSize {1:_ec .PageSize {8.5*_fe .Inch ,11*_fe .Inch },2:_ec .PageSize {8.5*_fe .Inch ,11*_fe .Inch },3:_ec .PageSize {11*_fe .Inch ,17*_fe .Inch },4:_ec .PageSize {17*_fe .Inch ,11*_fe .Inch },5:_ec .PageSize {8.5*_fe .Inch ,14*_fe .Inch },6:_ec .PageSize {5.5*_fe .Inch ,8.5*_fe .Inch },7:_ec .PageSize {7.5*_fe .Inch ,10*_fe .Inch },8:_ec .PageSize {_ddccb (297),_ddccb (420)},9:_ec .PageSize {_ddccb (210),_ddccb (297)},10:_ec .PageSize {_ddccb (210),_ddccb (297)},11:_ec .PageSize {_ddccb (148),_ddccb (210)},70:_ec .PageSize {_ddccb (105),_ddccb (148)},12:_ec .PageSize {_ddccb (250),_ddccb (354)},13:_ec .PageSize {_ddccb (182),_ddccb (257)},14:_ec .PageSize {8.5*_fe .Inch ,13*_fe .Inch },20:_ec .PageSize {4.125*_fe .Inch ,9.5*_fe .Inch },27:_ec .PageSize {_ddccb (110),_ddccb (220)},28:_ec .PageSize {_ddccb (162),_ddccb (229)},34:_ec .PageSize {_ddccb (250),_ddccb (176)},29:_ec .PageSize {_ddccb (324),_ddccb (458)},30:_ec .PageSize {_ddccb (229),_ddccb (324)},31:_ec .PageSize {_ddccb (114),_ddccb (162)},37:_ec .PageSize {3.88*_fe .Inch ,7.5*_fe .Inch },43:_ec .PageSize {_ddccb (100),_ddccb (148)},69:_ec .PageSize {_ddccb (200),_ddccb (148)}};
const _ac =3;const _gb =1.5;func (_eface *convertContext )getColorStringFromSmlColor (_egc *_dad .CT_Color )*string {var _befg string ;if _egc .RgbAttr !=nil {_befg =*_egc .RgbAttr ;}else if _egc .IndexedAttr !=nil &&*_egc .IndexedAttr < 64{_befg =_faab [*_egc .IndexedAttr ];
}else if _egc .ThemeAttr !=nil {_effdc :=*_egc .ThemeAttr ;_befg =_eface .getColorFromTheme (_effdc );};if _befg ==""{return nil ;};if len (_befg )> 6{_befg =_befg [(len (_befg )-6):];};if _egc .TintAttr !=nil {_eabae :=*_egc .TintAttr ;_befg =_agg .AdjustColorByTint (_befg ,_eabae );
};_befg ="\u0023"+_befg ;return &_befg ;};func (_dcg *convertContext )combineCellStyleWithRPrElt (_dca *style ,_feac *_dad .CT_RPrElt )*style {_gac :=*_dca ;_defe :=_dcg .getStyleFromRPrElt (_feac );if _defe ==nil {return &_gac ;};if _defe ._dcdg !=nil {_gac ._dcdg =_defe ._dcdg ;
};if _defe ._fga !=nil {_gac ._fga =_defe ._fga ;};if _defe ._cbc !=nil {_gac ._cbc =_defe ._cbc ;};if _defe ._ddff !=nil {_gac ._ddff =_defe ._ddff ;};if _defe ._ecea !=nil {_gac ._ecea =_defe ._ecea ;};if _defe ._bad !=nil {_gac ._bad =_defe ._bad ;};
if _defe ._bdba !=nil {_gac ._bdba =_defe ._bdba ;};if _defe ._geab !=nil {_gac ._geab =_defe ._geab ;};return &_gac ;};

// RegisterFontsFromDirectory registers all fonts from the given directory automatically detecting font families and styles.
func RegisterFontsFromDirectory (dirName string )error {return _agg .RegisterFontsFromDirectory (dirName );};func (_ecd *convertContext )addRowToPage (_dffcd []*cell ,_eabb int ){_fbdf :=0.0;_effc :=_ecd ._agca ;for _ ,_afcd :=range _dffcd {if len (_afcd ._gafe )!=0{_afcd ._cgdg =_fbdf ;
_fbdf =_afcd ._fec +_afcd ._aab ;};};for _dbaf :=len (_dffcd )-1;_dbaf >=0;_dbaf --{_cea :=_dffcd [_dbaf ];if len (_cea ._gafe )!=0{_cea ._gdea =_effc ;_effc =_cea ._fec ;};};_ecd ._efac ._gbab =append (_ecd ._efac ._gbab ,&pageRow {_dbab :_eabb ,_efefg :_dffcd });
};const (FontStyle_Regular FontStyle =0;FontStyle_Bold FontStyle =1;FontStyle_Italic FontStyle =2;FontStyle_BoldItalic FontStyle =3;);type cell struct{_dddd _dad .ST_CellType ;_afbg int ;_fec float64 ;_gafe []*line ;_aab float64 ;_adg float64 ;_fbgb float64 ;
_cgdg float64 ;_gdea float64 ;_cced *_ec .TextStyle ;_ccdg *border ;_adec *border ;_bggc *border ;_gab *border ;_fada bool ;_eccbg bool ;_feda _ec .Color ;};var _dc =_ddccb (1);type rowInfo struct{_bafg float64 ;_cafa bool ;_cgd float64 ;_cbaa *style ;
_cgfb []*cell ;_ebgb float64 ;};

// ConvertToPdf converts a sheet to a PDF file. This package is beta, breaking changes can take place.
func ConvertToPdf (s *_ee .Sheet )*_ec .Creator {_ge :=s .X ();if _ge ==nil {return nil ;};var _dae _ec .PageSize ;_eb :=true ;_dcb :=false ;if _ge .SheetPr !=nil &&_ge .SheetPr .PageSetUpPr !=nil &&_ge .SheetPr .PageSetUpPr .FitToPageAttr !=nil &&*_ge .SheetPr .PageSetUpPr .FitToPageAttr {_dcb =true ;
};if _cb :=_ge .PageSetup ;_cb !=nil {_eb =_cb .OrientationAttr ==_dad .ST_OrientationLandscape ;if _fee :=_cb .PaperSizeAttr ;_fee !=nil {_dae =_egec [*_fee ];};};if (_dae ==_ec .PageSize {}){_dae =_ec .PageSizeA4 ;};if _eb {_dae [0],_dae [1]=_dae [1],_dae [0];
};_dcf :=_ec .New ();_dcf .SetPageSize (_dae );var _ded ,_db ,_fg ,_bf float64 ;if _dg :=_ge .PageMargins ;_dg !=nil {_fg =_dg .LeftAttr ;_bf =_dg .RightAttr ;_ded =_dg .TopAttr ;_db =_dg .BottomAttr ;};if _fg < _agc {_fg =_agc ;};if _bf < _agc {_bf =_agc ;
};if _ded < _ab {_ded =_ab ;};if _db < _ab {_db =_ab ;};_ded *=_fe .Inch ;_db *=_fe .Inch ;_fg *=_fe .Inch ;_bf *=_fe .Inch ;_dcf .SetPageMargins (_fg ,_bf ,_ded ,_db );_bfb :=s .Workbook ();var _ae *_ag .Theme ;if len (_bfb .Themes ())> 0{_ae =_bfb .Themes ()[0];
};var _gbd ,_cd ,_gad ,_ce int ;for _ ,_ddf :=range _bfb .DefinedNames (){if _ddf .Name ()=="\u005f\u0078l\u006e\u006d\u002eP\u0072\u0069\u006e\u0074\u005f\u0041\u0072\u0065\u0061"{_cbd ,_ddc ,_bfa ,_abg :=_agg .ParseExcelRange (_ddf .Content ());if _abg ==nil &&s .Name ()==_cbd {_gbd =int (_ddc .ColumnIdx );
_cd =int (_bfa .ColumnIdx );_gad =int (_ddc .RowIdx );_ce =int (_bfa .RowIdx );};};};_fdg :=[]_ee .Table {};if _ge .TableParts !=nil &&_ge .TableParts .TablePart !=nil {_cbdd :=0;_ef :=s .Workbook ().Tables ();_ga .Slice (_ef [:],func (_cbe ,_df int )bool {return _ef [_cbe ].X ().IdAttr < _ef [_df ].X ().IdAttr });
for _ ,_be :=range s .Workbook ().Sheets (){if _be .Name ()==s .Name (){break ;}else {if _be .X ().TableParts !=nil &&_be .X ().TableParts .TablePart !=nil {_cbdd +=len (_be .X ().TableParts .TablePart );};};};if len (_ef )>=_cbdd +len (_ge .TableParts .TablePart ){_fdg =append (_fdg ,_ef [_cbdd :_cbdd +len (_ge .TableParts .TablePart )]...);
};};_fb :=&convertContext {_cegc :_dcf ,_cecg :s ,_eaab :s .Workbook (),_eeeb :_ae ,_cca :&s .Workbook ().StyleSheet ,_gfdc :_ded ,_gcbf :_fg ,_gbg :_dae [1]-_db -_ded ,_agca :_dae [0]-_bf -_fg ,_aebb :_gbd ,_cddc :_cd ,_cgfe :_gad ,_gbbd :_ce ,_degg :_dcb ,_gaae :_fdg };
_fb .makeAnchors ();_fb .determineMaxIndexes ();if _fb ._cagg ==0&&_fb ._cdea ==0{_dcf .NewPage ();return _dcf ;};_fb .makeCols ();_fb .makeRows ();_fb .makeMergedCells ();_fb .makeCells ();_fb .makePagespans ();_fb .makeRowspans ();_fb .makePages ();_fb .fillPages ();
_fb .distributeAnchors ();_fb .drawSheet (_eb );return _dcf ;};func _bbg (_gdgb []*symbol )float64 {_fbdb :=0.0;for _ ,_bgg :=range _gdgb {if _bgg ._gbaa > _fbdb {_fbdb =_bgg ._gbaa ;};};return _fbdb ;};func (_ggd *convertContext )alignSymbolsVertically (_bfcd *cell ,_defd _dad .ST_VerticalAlignment ){var _efbf float64 ;
switch _defd {case _dad .ST_VerticalAlignmentTop :_efbf =_b ;if _bfcd ._fada {_efbf -=_gb ;}else if _bfcd ._eccbg {_efbf +=4*_gb ;};for _ ,_gggb :=range _bfcd ._gafe {_efbf +=_gggb ._fegg ;_gggb ._adce =_efbf ;_efbf +=_dc ;};case _dad .ST_VerticalAlignmentCenter :_dfg :=0.0;
for _ ,_bbgf :=range _bfcd ._gafe {_dfg +=_bbgf ._fegg +_ddccb (1);};_efbf =0.5*(_bfcd ._fbgb -_dfg );if _bfcd ._fada {_efbf -=2*_gb ;}else if _bfcd ._eccbg {_efbf +=2*_gb ;};for _ ,_cba :=range _bfcd ._gafe {_efbf +=_cba ._fegg +0.5*_dc ;_cba ._adce =_efbf ;
_efbf +=0.5*_dc ;};default:_efbf =_bfcd ._fbgb -_b ;if _bfcd ._fada {_efbf -=4*_gb ;}else if _bfcd ._eccbg {_efbf +=_gb ;};for _aggc :=len (_bfcd ._gafe )-1;_aggc >=0;_aggc --{_bfcd ._gafe [_aggc ]._adce =_efbf ;_efbf -=_bfcd ._gafe [_aggc ]._fegg ;_efbf -=_dc ;
};};};var _faab =[]string {"\u0030\u0030\u0030\u0030\u0030\u0030","\u0066\u0066\u0066\u0066\u0066\u0066","\u0066\u0066\u0030\u0030\u0030\u0030","\u0030\u0030\u0066\u0066\u0030\u0030","\u0030\u0030\u0030\u0030\u0066\u0066","\u0066\u0066\u0066\u0066\u0030\u0030","\u0066\u0066\u0030\u0030\u0066\u0066","\u0030\u0030\u0066\u0066\u0066\u0066","\u0030\u0030\u0030\u0030\u0030\u0030","\u0066\u0066\u0066\u0066\u0066\u0066","\u0066\u0066\u0030\u0030\u0030\u0030","\u0030\u0030\u0066\u0066\u0030\u0030","\u0030\u0030\u0030\u0030\u0066\u0066","\u0066\u0066\u0066\u0066\u0030\u0030","\u0066\u0066\u0030\u0030\u0066\u0066","\u0030\u0030\u0066\u0066\u0066\u0066","\u0038\u0030\u0030\u0030\u0030\u0030","\u0030\u0030\u0038\u0030\u0030\u0030","\u0030\u0030\u0030\u0030\u0038\u0030","\u0038\u0030\u0038\u0030\u0030\u0030","\u0038\u0030\u0030\u0030\u0038\u0030","\u0030\u0030\u0038\u0030\u0038\u0030","\u0063\u0030\u0063\u0030\u0063\u0030","\u0038\u0030\u0038\u0030\u0038\u0030","\u0039\u0039\u0039\u0039\u0066\u0066","\u0039\u0039\u0033\u0033\u0036\u0036","\u0066\u0066\u0066\u0066\u0063\u0063","\u0063\u0063\u0066\u0066\u0066\u0066","\u0036\u0036\u0030\u0030\u0036\u0036","\u0066\u0066\u0038\u0030\u0038\u0030","\u0030\u0030\u0036\u0036\u0063\u0063","\u0063\u0063\u0063\u0063\u0066\u0066","\u0030\u0030\u0030\u0030\u0038\u0030","\u0066\u0066\u0030\u0030\u0066\u0066","\u0066\u0066\u0066\u0066\u0030\u0030","\u0030\u0030\u0066\u0066\u0066\u0066","\u0038\u0030\u0030\u0030\u0038\u0030","\u0038\u0030\u0030\u0030\u0030\u0030","\u0030\u0030\u0038\u0030\u0038\u0030","\u0030\u0030\u0030\u0030\u0066\u0066","\u0030\u0030\u0063\u0063\u0066\u0066","\u0063\u0063\u0066\u0066\u0066\u0066","\u0063\u0063\u0066\u0066\u0063\u0063","\u0066\u0066\u0066\u0066\u0039\u0039","\u0039\u0039\u0063\u0063\u0066\u0066","\u0066\u0066\u0039\u0039\u0063\u0063","\u0063\u0063\u0039\u0039\u0066\u0066","\u0066\u0066\u0063\u0063\u0039\u0039","\u0033\u0033\u0036\u0036\u0066\u0066","\u0033\u0033\u0063\u0063\u0063\u0063","\u0039\u0039\u0063\u0063\u0030\u0030","\u0066\u0066\u0063\u0063\u0030\u0030","\u0066\u0066\u0039\u0039\u0030\u0030","\u0066\u0066\u0036\u0036\u0030\u0030","\u0036\u0036\u0036\u0036\u0039\u0039","\u0039\u0036\u0039\u0036\u0039\u0036","\u0030\u0030\u0033\u0033\u0036\u0036","\u0033\u0033\u0039\u0039\u0036\u0036","\u0030\u0030\u0033\u0033\u0030\u0030","\u0033\u0033\u0033\u0033\u0030\u0030","\u0039\u0039\u0033\u0033\u0030\u0030","\u0039\u0039\u0033\u0033\u0036\u0036","\u0033\u0033\u0033\u0033\u0039\u0039","\u0033\u0033\u0033\u0033\u0033\u0033"};
const _gf =0.64;func (_cdge *convertContext )getColorFromTheme (_efed uint32 )string {_bfeef :=_cdge ._eaab .Themes ();if len (_bfeef )!=0{_fbc :=_bfeef [0];if _deec :=_fbc .ThemeElements ;_deec !=nil {if _dgc :=_deec .ClrScheme ;_dgc !=nil {switch _efed {case 0:return _agg .GetColorStringFromDmlColor (_dgc .Lt1 );
case 1:return _agg .GetColorStringFromDmlColor (_dgc .Dk1 );case 2:return _agg .GetColorStringFromDmlColor (_dgc .Lt2 );case 3:return _agg .GetColorStringFromDmlColor (_dgc .Dk2 );case 4:return _agg .GetColorStringFromDmlColor (_dgc .Accent1 );case 5:return _agg .GetColorStringFromDmlColor (_dgc .Accent2 );
case 6:return _agg .GetColorStringFromDmlColor (_dgc .Accent3 );case 7:return _agg .GetColorStringFromDmlColor (_dgc .Accent4 );case 8:return _agg .GetColorStringFromDmlColor (_dgc .Accent5 );case 9:return _agg .GetColorStringFromDmlColor (_dgc .Accent6 );
};};};};return "";};func (_faec *convertContext )getSymbolsFromR (_dabb []*_dad .CT_RElt ,_eebf *style )[]*symbol {_ggc :=[]*symbol {};for _ ,_aagg :=range _dabb {_gedc :=_faec .combineCellStyleWithRPrElt (_eebf ,_aagg .RPr );for _ ,_degd :=range _aagg .T {_ggc =append (_ggc ,&symbol {_bfbg :string (_degd ),_dbg :_faec .makeTextStyleFromCellStyle (_gedc )});
};};return _ggc ;};func (_ba *convertContext )makeRows (){_ddfd :=[]*rowInfo {};_eae :=_ba ._cecg .Rows ();_bfe :=0;_gca :=0.0;for _eeb ,_dgg :=range _eae {if _eeb < _ba ._cgfe ||(_eeb > _ba ._gbbd &&_ba ._gbbd > 0){continue ;};_bfe ++;_fae :=int (_dgg .RowNumber ());
if _fae > _bfe {for _aeb :=_bfe ;_aeb < _fae ;_aeb ++{_ddfd =append (_ddfd ,&rowInfo {_cgd :_gd /_c });_gca +=_gd /_c ;};_bfe =_fae ;};var _dec float64 ;if _dgg .X ().HtAttr ==nil {_dec =_gd ;}else {_dec =*_dgg .X ().HtAttr ;};_ddfd =append (_ddfd ,&rowInfo {_cgd :_dec /_c ,_cafa :true ,_cbaa :_ba .getStyle (_dgg .X ().SAttr )});
_gca +=_dec /_c ;};for _bcb :=len (_ddfd );_bcb < _ba ._cagg ;_bcb ++{_ddfd =append (_ddfd ,&rowInfo {_cgd :_gd /_c });_gca +=_gd /_c ;};if _ba ._degg ||_gca > _ba ._gbg {for _ ,_gbb :=range _ddfd {_gbb ._cgd *=_ba ._eeag ;};};_ba ._afge =_ddfd ;};